{"version":3,"sources":["BarChart.js","datasource/DatasourceProvider.js","datasource/Datasource.js","Population.js","TestingRates.js","datasource/JHDatasourceProvider.js","Utils.js","RaceChart.js","MapChart.js","App.js","RApp.js","index.js"],"names":["BarChart","datasource","this","props","name","logmode","dayOffset","width","heigth","role","datasets","length","data","absolute","current","confirmed","className","x","y","Object","values","map","dataset","dateIndex","confirmedBarHeight","recoveredBarHeight","deceasedBarHeight","barWidth","max","absoluteMaxValue","Math","round","log","recovered","deceased","isNaN","isFinite","String","height","React","Component","DatasourceProvider","getDatasource","Error","Datasource","locations","ppmMaxValue","Dataset","date","cameraCoordinates","totalConfirmed","totalRecovered","totalDeceased","totalActive","totalConfirmedProjected","Data","containmentScore","active","confirmedProjected","growthLast1Day","growthLast3Days","growthLast7Days","ppm","ABSOLUTE","RATES","JHDatasourceProvider","BLACKLIST_NAMES","loadUScounties","callback","ds","loadFromUrl","historyConfirmedUrl","rawConfirmed","historyRecoveredUrl","rawRecovered","historyDeceasedUrl","rawDeceased","historyUSConfirmedUrl","rawUSConfirmed","historyUSDeceasedUrl","rawUSDeceased","liveCountriesUrl","rawCountries","liveUSStatesUrl","rawUSStates","liveUrl","rawLive","parseHistory","parseHistoryUS","push","Date","toLocaleDateString","replace","parseLive","parseLiveCountries","parseLiveUSStates","fillEmpty","computeActive","computeConfirmedProjected","computeContainmentScore","computeTotals","keys","nameIndex","lastData","tableConfirmed","tableRecovered","tableDeceased","parseTable","tableUSConfirmed","tableUSDeceased","datasetIndex","locationData","endsWith","g","avgTested","avgPopulation","countTested","countPopulation","index","Testing","Population","globalTestingRate","locationIndex","computeConfirmedProjectedBlock","block","scale","calculateConfirmedProjected","value","computeActiveBlock","calculateActive","attribute","table","parseHeader","parseRowUS","seriesOffset","header","parseRow","row","includes","i","parseBlock","Number","console","url","Papa","parse","download","complete","results","a","tableCountries","tableUSStates","Utils","rounded","num","RaceChart","svgWidth","svgHeight","expanded","window","innerWidth","innerHeight","names","sort","b","val_a","val_b","points","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","Tooltip","MapChart","componentDidMount","render","componentDidUpdate","prevProps","state","updateLeafletElement","layers","leafletElement","_layers","layer","options","bringToFront","leaderboard","align","title","style","textAlign","small","disableTouchListener","onClick","setState","leadership","icon","faProcedures","size","faShieldAlt","faBiohazard","faHeartbeat","faHeartBroken","faVial","filter","count","mode","ppmmode","ca","cb","dataMode","momentum","tested","selectedLocations","pop","lng","lat","zoom","handleZoom","getZoom","leafletMap","position","Map","ref","center","zoomControl","onZoomEnd","TileLayer","attribution","mapstyle","LayerGroup","key","momentumMarkers","projectedMarkers","confirmedMarkers","recoveredMarkers","deceasedMarkers","markers","coordinates","pos","abs","scaleLog","scaleLogAndPpm","CircleMarker","chart","display","fillColor","radius","sqrt","factor","opacity","fillOpacity","direction","offset","momentumTooltip","that","testscale","marker","glyph","type","diffX","diffY","corner0","corner1","latLngs","glyphs","Rectangle","bounds","Polygon","positions","unit","faUsers","Badge","variant","stayAtHomeAdvice","valign","faExclamationTriangle","testmode","e","population","scaleIfPillOrBar","string","char","RegExp","setTotalConfirmed","setTotalRecovered","setTotalDeceased","setTotalConfirmedProjected","minimized_controls","minimized_timeline","playmode","selectedData","showUScounties","showModal","expandRaceChart","Modal","show","onHide","Header","closeButton","Title","faShieldVirus","Body","target","href","cellPadding","src","colSpan","float","fontSize","Footer","Button","hidden","faWindowMinimize","arrow","faQuestion","FormControl","Select","labelId","id","onChange","MenuItem","FormControlLabel","control","Checkbox","checked","label","Slider","defaultValue","step","min","marks","Form","Check","inline","valueLabelDisplay","rel","faBug","faQuestionCircle","faBalanceScale","faWindowMaximize","faWindowRestore","disabled","pointerEvents","fontStyle","fontWeight","lineHeight","faStepBackward","faStepForward","document","getElementsByClassName","now","startDate","playpause","interval","setInterval","clearInterval","faPlayCircle","faPauseCircle","faStopCircle","dangerouslySetInnerHTML","__html","LinearProgress","memo","App","useState","Navbar","bg","fixed","expand","Brand","faDotCircle","Container","fluid","Row","noGutters","Col","marginTop","RApp","referrer","indexOf","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bb17e643.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class BarChart extends React.Component {\n  render() {\n    let datasource = this.props.datasource;\n    let name = this.props.name;\n    let logmode = this.props.logmode;\n    let dayOffset = this.props.dayOffset;\n    return (\n      <svg width=\"272\" heigth=\"145\" role=\"img\">\n        {\n          datasource.datasets[datasource.datasets.length - 5].data[name].absolute.current.confirmed === -1 &&\n          [\n            <text\n              className={\"barChartNoData\"}\n              x={70}\n              y={70}\n            >\n              No historic data provided.\n            </text>,\n            <text\n              className={\"legend\"}\n              x={65}\n              y={85}\n            >\n              Showing single bar of today only &nbsp; &nbsp; &nbsp;⟶\n            </text>\n          ]\n        }\n        {\n          Object.values(datasource.datasets).map((dataset, dateIndex) => {\n            let svgWidth = 272;\n            let svgHeight = 145;\n            let barWidth = svgWidth / (datasource.datasets.length);\n            let max = datasource.absoluteMaxValue;\n            // let confirmedProjectedBarHeight;\n            let confirmedBarHeight;\n            let recoveredBarHeight;\n            let deceasedBarHeight;\n            if(logmode) {\n                // confirmedProjectedBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.confirmedProjected * this.state.testscale) / Math.log(max)) * svgHeight);\n                confirmedBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.confirmed) / Math.log(max)) * svgHeight);\n                recoveredBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.recovered) / Math.log(max)) * svgHeight);\n                deceasedBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.deceased) / Math.log(max)) * svgHeight);\n            } else {\n                // confirmedProjectedBarHeight = Math.round((dataset.data[name].absolute.current.confirmedProjected * this.state.testscale / max) * svgHeight);\n                confirmedBarHeight = Math.round((dataset.data[name].absolute.current.confirmed / max) * svgHeight);\n                recoveredBarHeight = Math.round((dataset.data[name].absolute.current.recovered / max) * svgHeight);\n                deceasedBarHeight = Math.round((dataset.data[name].absolute.current.deceased / max) * svgHeight);\n            }\n            if(isNaN(confirmedBarHeight) || !isFinite(confirmedBarHeight)) {\n              confirmedBarHeight = 0;\n            }\n            if(isNaN(recoveredBarHeight) || !isFinite(recoveredBarHeight)) {\n              recoveredBarHeight = 0;\n            }\n            if(isNaN(deceasedBarHeight) || !isFinite(deceasedBarHeight)) {\n              deceasedBarHeight = 0;\n            }\n            return(\n              <g>\n                {\n                  dayOffset === dateIndex - datasource.datasets.length + 1 &&\n                  <g className=\"todayMarker\">\n                    <rect x={String(dateIndex * barWidth)} y={0} width={barWidth} height={svgHeight}></rect>\n                  </g>\n                }\n                {\n                  /*<g className=\"confirmedProjectedBar\">\n                    <rect x={String(dateIndex * barWidth)} y={svgHeight - confirmedProjectedBarHeight} width={barWidth} height={confirmedProjectedBarHeight}></rect>\n                  </g>*/\n                }\n                <g className=\"confirmedBar\">\n                 <rect x={String(dateIndex * barWidth)} y={svgHeight - confirmedBarHeight} width={barWidth} height={confirmedBarHeight}></rect>\n                </g>\n                <g className=\"recoveredBar\">\n                  <rect x={String(dateIndex * barWidth)} y={svgHeight - recoveredBarHeight} width={barWidth} height={recoveredBarHeight}></rect>\n                </g>\n                <g className=\"deceasedBar\">\n                  <rect x={String(dateIndex * barWidth)} y={svgHeight - deceasedBarHeight} width={barWidth} height={deceasedBarHeight}></rect>\n                </g>\n              </g>\n            );\n          })\n        }\n      </svg>\n    );\n  }\n}\n","export class DatasourceProvider {\n\n    constructor(name) {\n        this.name = name;\n    }\n\n    getDatasource = () => {\n        throw Error(\"not implemented\");\n    };\n}\n","\n\nexport class Datasource {\n\n    constructor() {\n\n        // data sets order by time\n        this.datasets = [];\n\n        // location id -> lat/lon\n        this.locations = {};\n\n        // maximum value (for normalization)\n        this.absoluteMaxValue = 0;\n        this.ppmMaxValue = 0\n    }\n\n}\n\nexport class Dataset {\n\n    constructor(date) {\n\n        this.date = date;\n\n        // camera coordinates (for story mode)\n        this.cameraCoordinates = null;\n\n        // location id -> data\n        this.data = {};\n\n        // stats\n        this.totalConfirmed = 0;\n        this.totalRecovered = 0;\n        this.totalDeceased = 0;\n        this.totalActive = 0;\n        this.totalConfirmedProjected = 0;\n    }\n}\n\nexport class Data {\n    constructor() {\n\n        this.containmentScore = null;\n\n        this.absolute = {\n            current: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast1Day: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast3Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast7Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            }\n        };\n\n        this.ppm = {\n            current: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast1Day: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast3Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast7Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            }\n        };\n    }\n}\n\nexport class CameraCoordinates {\n    constructor(location, zoom) {\n        this.location = location;\n        this.zoom = zoom;\n    }\n}\n\nexport class Location {\n    constructor(lat, lon) {\n        this.lat = lat;\n        this.lon = lon;\n    }\n}\n","// Population counts extracted from the following sources:\n// US States: from https://www.census.gov/newsroom/press-kits/2019/national-state-estimates.html:\n// Countries: from https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2019_TotalPopulationBySex.csv\n// China: from https://www.worldatlas.com/articles/chinese-provinces-by-population.html\n// Australia: from https://en.wikipedia.org/wiki/States_and_territories_of_Australia\n// Diamond Princess: https://www.nytimes.com/2020/03/08/world/asia/coronavirus-cruise-ship.html\nexport const ABSOLUTE = {\n  \"American Samoa, US\": 55641,\n  \"Northern Mariana Islands, US\": 55144,\n  \"Anguilla, United Kingdom\": 15094,\n  \"British Virgin Islands, United Kingdom\": 31196,\n  \"Turks and Caicos Islands, United Kingdom\": 53700,\n  \"Alabama, US\": 4903185,\n  \"Alaska, US\": 731545,\n  \"Arizona, US\": 7278717,\n  \"Arkansas, US\": 3017804,\n  \"California, US\": 39512223,\n  \"Colorado, US\": 5758736,\n  \"Connecticut, US\": 3565287,\n  \"Delaware, US\": 973764,\n  \"District of Columbia, US\": 705749,\n  \"Florida, US\": 21477737,\n  \"Georgia, US\": 10617423,\n  \"Hawaii, US\": 1415872,\n  \"Idaho, US\": 1787065,\n  \"Illinois, US\": 12671821,\n  \"Indiana, US\": 6732219,\n  \"Iowa, US\": 3155070,\n  \"Kansas, US\": 2913314,\n  \"Kentucky, US\": 4467673,\n  \"Louisiana, US\": 4648794,\n  \"Maine, US\": 1344212,\n  \"Maryland, US\": 6045680,\n  \"Massachusetts, US\": 6892503,\n  \"Michigan, US\": 9986857,\n  \"Minnesota, US\": 5639632,\n  \"Mississippi, US\": 2976149,\n  \"Missouri, US\": 6137428,\n  \"Montana, US\": 1068778,\n  \"Nebraska, US\": 1934408,\n  \"Nevada, US\": 3080156,\n  \"New Hampshire, US\": 1359711,\n  \"New Jersey, US\": 8882190,\n  \"New Mexico, US\": 2096829,\n  \"New York, US\": 19453561,\n  \"North Carolina, US\": 10488084,\n  \"North Dakota, US\": 762062,\n  \"Ohio, US\": 11689100,\n  \"Oklahoma, US\": 3956971,\n  \"Oregon, US\": 4217737,\n  \"Pennsylvania, US\": 12801989,\n  \"Rhode Island, US\": 1059361,\n  \"South Carolina, US\": 5148714,\n  \"South Dakota, US\": 884659,\n  \"Tennessee, US\": 6829174,\n  \"Texas, US\": 28995881,\n  \"Utah, US\": 3205958,\n  \"Vermont, US\": 623989,\n  \"Virginia, US\": 8535519,\n  \"Washington, US\": 7614893,\n  \"West Virginia, US\": 1792147,\n  \"Wisconsin, US\": 5822434,\n  \"Wyoming, US\": 578759,\n  \"Afghanistan\": 38928341,\n  \"Africa\": 1340598113,\n  \"African Group\": 1338826591,\n  \"African Union\": 1339423921,\n  \"African Union: Central Africa\": 158619638,\n  \"African Union: Eastern Africa\": 392563672,\n  \"African Union: Northern Africa\": 207032899,\n  \"African Union: Southern Africa\": 184002188,\n  \"African Union: Western Africa\": 397205524,\n  \"African, Caribbean and Pacific (ACP) Group of States\": 1179679906,\n  \"Albania\": 2877800,\n  \"Algeria\": 43851043,\n  \"American Samoa\": 55197,\n  \"Andean Community\": 113170819,\n  \"Andorra\": 77265,\n  \"Angola\": 32866267.999999996,\n  \"Anguilla\": 15002,\n  \"Antigua and Barbuda\": 97928,\n  \"Argentina\": 45195777,\n  \"Armenia\": 2963234,\n  \"Aruba, Netherlands\": 106766,\n  \"Asia\": 4641054786,\n  \"Asia-Pacific Economic Cooperation (APEC)\": 2972249482,\n  \"Asia-Pacific Group\": 4621682230,\n  \"Association of Southeast Asian Nations (ASEAN)\": 667301412,\n  \"Australia\": 25499881,\n  \"Australia/New Zealand\": 30322114,\n  \"Austria\": 9006400,\n  \"Azerbaijan\": 10139175,\n  \"BRIC\": 3177822028,\n  \"BRICS\": 3237130718,\n  \"Bahamas\": 393248,\n  \"Bahrain\": 1701583,\n  \"Bangladesh\": 164689383,\n  \"Barbados\": 287371,\n  \"Belarus\": 9449321,\n  \"Belgium\": 11589616,\n  \"Belize\": 397621,\n  \"Belt-Road Initiative (BRI)\": 3403061795,\n  \"Belt-Road Initiative: Africa\": 1192659576,\n  \"Belt-Road Initiative: Asia\": 1572525725,\n  \"Belt-Road Initiative: Europe\": 413895375,\n  \"Belt-Road Initiative: Latin America and the Caribbean\": 208569955,\n  \"Belt-Road Initiative: Pacific\": 15411164,\n  \"Benin\": 12123198,\n  \"Bermuda, United Kingdom\": 62273,\n  \"Bhutan\": 771612,\n  \"Black Sea Economic Cooperation (BSEC)\": 343357186,\n  \"Bolivarian Alliance for the Americas (ALBA)\": 58690348,\n  \"Bolivia\": 11673029,\n  \"Bonaire, Sint Eustatius and Saba, Netherlands\": 26221,\n  \"Bosnia and Herzegovina\": 3280815,\n  \"Botswana\": 2351625,\n  \"Brazil\": 212559409,\n  \"British Virgin Islands\": 30237,\n  \"Brunei\": 437483,\n  \"Bulgaria\": 6948445,\n  \"Burkina Faso\": 20903278,\n  \"Burma\": 53570000,\n  \"MS Zaandam\": 1432,\n  \"Burundi\": 11890781,\n  \"Cabo Verde\": 555988,\n  \"Cambodia\": 16718971.000000002,\n  \"Cameroon\": 26545864,\n  \"Canada\": 37742157,\n  \"Caribbean\": 43532374,\n  \"Caribbean Community and Common Market (CARICOM)\": 18849823,\n  \"Cayman Islands, United Kingdom\": 65720,\n  \"Central African Republic\": 4829764,\n  \"Central America\": 179670186,\n  \"Central Asia\": 74338926,\n  \"Central European Free Trade Agreement (CEFTA)\": 25746658,\n  \"Central and Southern Asia\": 2014708531,\n  \"Chad\": 16425859,\n  \"Channel Islands, United Kingdom\": 173859,\n  \"Jersey, United Kingdom\": 97857,\n  \"Chile\": 19116209,\n  \"China\": 1439323774,\n  \"China (and dependencies)\": 1471286879,\n  \"China, Hong Kong SAR\": 7496988,\n  \"China, Macao SAR\": 649342,\n  \"Taiwan*\": 23816775,\n  \"Colombia\": 50882884,\n  \"Commonwealth of Independent States (CIS)\": 290592838,\n  \"Commonwealth of Nations\": 2565385550,\n  \"Commonwealth: Africa\": 583993867,\n  \"Commonwealth: Asia\": 1825653173,\n  \"Commonwealth: Caribbean and Americas\": 44597814,\n  \"Commonwealth: Europe\": 69534904,\n  \"Commonwealth: Pacific\": 41605792,\n  \"Comoros\": 869595,\n  \"Congo (Kinshasa)\": 11860000,\n  \"Congo (Brazzaville)\": 1800000,\n  \"Cook Islands\": 17564,\n  \"Costa Rica\": 5094114,\n  \"Countries with Access to the Sea\": 7199203331,\n  \"Countries with Access to the Sea: Africa\": 999209561,\n  \"Countries with Access to the Sea: Asia\": 4474222842,\n  \"Countries with Access to the Sea: Europe\": 679066702,\n  \"Countries with Access to the Sea: Latin America and the Caribbean\": 635156773,\n  \"Countries with Access to the Sea: Northern America\": 368869644,\n  \"Countries with Access to the Sea: Oceania\": 42677809,\n  \"Croatia\": 4105268,\n  \"Cuba\": 11326616,\n  \"Curacao, Netherlands\": 164100,\n  \"Cyprus\": 1207361,\n  \"Czechia\": 10708982,\n  \"Cote d'Ivoire\": 26378275,\n  \"Dem. People's Republic of Korea\": 25778815,\n  \"Denmark, Denmark\": 5792203,\n  \"Denmark\": 5792203,\n  \"Denmark (and dependencies)\": 5897840,\n  \"Djibouti\": 988002,\n  \"Dominica\": 71991,\n  \"Dominican Republic\": 10847904,\n  \"ECE: North America-2\": 368744804,\n  \"ECE: UNECE-52\": 1301482488,\n  \"ECLAC: Latin America\": 641934032,\n  \"ECLAC: The Caribbean\": 12024817,\n  \"ESCAP region: East and North-East Asia\": 1654272852,\n  \"ESCAP region: North and Central Asia\": 237364970,\n  \"ESCAP region: Pacific\": 42665213,\n  \"ESCAP region: South and South-West Asia\": 2024708672,\n  \"ESCAP region: South-East Asia\": 668619854,\n  \"ESCAP: ADB Developing member countries (DMCs)\": 4064234805,\n  \"ESCAP: ADB Group A (Concessional assistance only)\": 165457879,\n  \"ESCAP: ADB Group B (OCR blend)\": 1812617151,\n  \"ESCAP: ADB Group C (Regular OCR only)\": 2086159775,\n  \"ESCAP: ASEAN\": 667301412,\n  \"ESCAP: Central Asia\": 91430510,\n  \"ESCAP: ECO\": 512630793,\n  \"ESCAP: HDI groups\": 4627631561,\n  \"ESCAP: Landlocked countries (LLDCs)\": 166831944,\n  \"ESCAP: Least Developed Countries (LDCs)\": 314374173,\n  \"ESCAP: Pacific island dev. econ.\": 12343099,\n  \"ESCAP: SAARC\": 1856376652,\n  \"ESCAP: WB High income econ.\": 223305480,\n  \"ESCAP: WB Low income econ.\": 93843964,\n  \"ESCAP: WB Lower middle income econ.\": 2414189200,\n  \"ESCAP: WB Upper middle income econ.\": 1896273735,\n  \"ESCAP: WB income groups\": 4627612379,\n  \"ESCAP: high HDI\": 222728251,\n  \"ESCAP: high income\": 222956185,\n  \"ESCAP: income groups\": 4627631561,\n  \"ESCAP: low HDI\": 1933858787,\n  \"ESCAP: low income\": 2096735108,\n  \"ESCAP: lower middle HDI\": 2069715776,\n  \"ESCAP: lower middle income\": 586217954,\n  \"ESCAP: other Asia-Pacific countries/areas\": 200828133,\n  \"ESCAP: upper middle HDI\": 401328747,\n  \"ESCAP: upper middle income\": 1721722314,\n  \"ESCWA: Arab countries\": 436378875,\n  \"ESCWA: Arab least developed countries\": 96075713,\n  \"ESCWA: Gulf Cooperation Council countries\": 58664095,\n  \"ESCWA: Maghreb countries\": 99451506,\n  \"ESCWA: Mashreq countries\": 182187561,\n  \"ESCWA: member countries\": 374777016,\n  \"East African Community (EAC)\": 195283232,\n  \"Eastern Africa\": 445405578,\n  \"Eastern Asia\": 1678089627,\n  \"Eastern Europe\": 293013210,\n  \"Eastern European Group\": 339831453,\n  \"Eastern and South-Eastern Asia\": 2346709481,\n  \"Economic Community of Central African States (ECCAS)\": 204438115,\n  \"Economic Community of West African States (ECOWAS)\": 397205524,\n  \"Economic Cooperation Organization (ECO)\": 512630793,\n  \"Ecuador\": 17643060,\n  \"Egypt\": 102334403,\n  \"El Salvador\": 6486201,\n  \"Equatorial Guinea\": 1402985,\n  \"Eritrea\": 3546427,\n  \"Estonia\": 1326539,\n  \"Eswatini\": 1160164,\n  \"Ethiopia\": 114963583,\n  \"Eurasian Economic Community (Eurasec)\": 223691520,\n  \"Europe\": 747636045,\n  \"Europe (48)\": 747636045,\n  \"Europe and Northern America\": 1116505689,\n  \"European Community (EC: 12)\": 384860299,\n  \"European Free Trade Agreement (EFTA)\": 14455247,\n  \"European Union (EU: 15)\": 409506687,\n  \"European Union (EU: 28)\": 513136526,\n  \"Falkland Islands (Malvinas), United Kingdom\": 3483,\n  \"Faroe Islands, Denmark\": 48865,\n  \"Fiji\": 896444,\n  \"Finland\": 5540718,\n  \"France, France\": 65273512,\n  \"France\": 65273512,\n  \"France (and dependencies)\": 68147687,\n  \"French Guiana, France\": 298682,\n  \"French Polynesia, France\": 280904,\n  \"Gabon\": 2225728,\n  \"Gambia, The\": 2416664,\n  \"Gambia\": 2416664,\n  \"Georgia\": 3989175,\n  \"Germany\": 83783945,\n  \"Ghana\": 31072945,\n  \"Gibraltar, United Kingdom\": 33691,\n  \"Greater Arab Free Trade Area (GAFTA)\": 413978399,\n  \"Greece\": 10423056,\n  \"Greenland, Denmark\": 56772,\n  \"Grenada\": 112519,\n  \"Group of 77 (G77)\": 6135279467,\n  \"Group of Eight (G8)\": 918561011,\n  \"Group of Seven (G7)\": 772626551,\n  \"Group of Twenty (G20) - member states\": 4653331418,\n  \"Guadeloupe, France\": 400127,\n  \"Guam, US\": 168783,\n  \"Guatemala\": 17915567,\n  \"Guinea\": 13132792,\n  \"Guinea-Bissau\": 1967998,\n  \"Gulf Cooperation Council (GCC)\": 58664095,\n  \"Guyana\": 786559,\n  \"Haiti\": 11402533,\n  \"High-income countries\": 1263092934,\n  \"Holy See\": 809,\n  \"Honduras\": 9904608,\n  \"Hungary\": 9660350,\n  \"Iceland\": 341250,\n  \"India\": 1380004385,\n  \"Indonesia\": 273523621,\n  \"Iran\": 83992953,\n  \"Iraq\": 40222503,\n  \"Ireland\": 4937796,\n  \"Isle of Man, United Kingdom\": 85032,\n  \"Israel\": 8655541,\n  \"Italy\": 60461828,\n  \"Jamaica\": 2961161,\n  \"Japan\": 126476458,\n  \"Jordan\": 10203140,\n  \"Kazakhstan\": 18776707,\n  \"Kenya\": 53771300,\n  \"Kiribati\": 119446,\n  \"Kosovo\": 1831000,\n  \"Kuwait\": 4270563,\n  \"Kyrgyzstan\": 6524191,\n  \"LLDC: Africa\": 341388552,\n  \"LLDC: Asia\": 166831944,\n  \"LLDC: Europe\": 6117343,\n  \"LLDC: Latin America\": 18805559,\n  \"Land-locked Countries\": 595596207,\n  \"Land-locked Countries (Others)\": 62452809,\n  \"Land-locked Developing Countries (LLDC)\": 533143398.00000006,\n  \"Laos\": 7275556,\n  \"Latin America and the Caribbean\": 653962332,\n  \"Latin American Integration Association (ALADI)\": 573658551,\n  \"Latin American and Caribbean Group (GRULAC)\": 649376323,\n  \"Latvia\": 1886202,\n  \"League of Arab States (LAS, informal name: Arab League)\": 436378875,\n  \"Least developed countries\": 1057438163,\n  \"Least developed: Africa\": 701835489,\n  \"Least developed: Asia\": 343074875,\n  \"Least developed: Latin America and the Caribbean\": 11402533,\n  \"Least developed: Oceania\": 1125266,\n  \"Lebanon\": 6825442,\n  \"Lesotho\": 2142252,\n  \"Less developed regions\": 6521494468,\n  \"Less developed regions, excluding China\": 5050207589,\n  \"Less developed regions, excluding least developed countries\": 5464056305,\n  \"Less developed: Africa\": 1340598113,\n  \"Less developed: Asia\": 4514578328,\n  \"Less developed: Latin America and the Caribbean\": 653962332,\n  \"Less developed: Oceania\": 12355695,\n  \"Liberia\": 5057677,\n  \"Libya\": 6871287,\n  \"Liechtenstein\": 38137,\n  \"Lithuania\": 2722291,\n  \"Low-income countries\": 775710612,\n  \"Lower-middle-income countries\": 3098235284,\n  \"Luxembourg\": 625976,\n  \"Madagascar\": 27691019,\n  \"Malawi\": 19129955,\n  \"Malaysia\": 32365998,\n  \"Maldives\": 540542,\n  \"Mali\": 20250834,\n  \"Malta\": 441539,\n  \"Marshall Islands\": 59194,\n  \"Martinique, France\": 375265,\n  \"Mauritania\": 4649660,\n  \"Mauritius\": 1271767,\n  \"Mayotte, France\": 272813,\n  \"Melanesia\": 11122990,\n  \"Mexico\": 128932753,\n  \"Micronesia\": 548927,\n  \"Micronesia (Fed. States of)\": 115021,\n  \"Middle Africa\": 179595125,\n  \"Middle-income countries\": 5753051615,\n  \"Monaco\": 39244,\n  \"Mongolia\": 3278292,\n  \"Montenegro\": 628062,\n  \"Montserrat, United Kingdom\": 4999,\n  \"More developed regions\": 1273304261,\n  \"More developed: Asia\": 126476458,\n  \"More developed: Europe\": 747636045,\n  \"More developed: Northern America\": 368869644,\n  \"More developed: Oceania\": 30322114,\n  \"Morocco\": 36910558,\n  \"Mozambique\": 31255435,\n  \"Myanmar\": 54409794,\n  \"Namibia\": 2540916,\n  \"Nauru\": 10834,\n  \"Nepal\": 29136808,\n  \"Netherlands, Netherlands\": 17134873,\n  \"Netherlands\": 17134873,\n  \"Netherlands (and dependencies)\": 17474842,\n  \"New Caledonia, France\": 285491,\n  \"New EU member states (joined since 2004)\": 103629839,\n  \"New Zealand\": 4822233,\n  \"New Zealand (and dependencies)\": 4842765,\n  \"Nicaragua\": 6624554,\n  \"Niger\": 24206636,\n  \"Nigeria\": 206139587,\n  \"Niue\": 1618,\n  \"No income group available\": 2943568,\n  \"Non-Self-Governing Territories\": 1753672,\n  \"North American Free Trade Agreement (NAFTA)\": 497677557,\n  \"North Atlantic Treaty Organization (NATO)\": 944255667,\n  \"North Macedonia\": 2083380,\n  \"Northern Africa\": 246232508,\n  \"Northern Africa and Western Asia\": 525869282,\n  \"Northern America\": 368869644,\n  \"Northern Europe\": 106261271,\n  \"Northern Mariana Islands\": 57557,\n  \"Norway\": 5421242,\n  \"Oceania\": 42677809,\n  \"Oceania (excluding Australia and New Zealand)\": 12355695,\n  \"Oman\": 5106622,\n  \"Organisation for Economic Co-operation and Development (OECD)\": 1313469470,\n  \"Organization for Security and Co-operation in Europe (OSCE)\": 1296294632,\n  \"Organization of American States (OAS)\": 1018121127,\n  \"Organization of Petroleum Exporting countries (OPEC)\": 518144279,\n  \"Organization of the Islamic Conference (OIC)\": 1907530488,\n  \"Pakistan\": 220892331,\n  \"Palau\": 18092,\n  \"Panama\": 4314768,\n  \"Papua New Guinea\": 8947027,\n  \"Paraguay\": 7132530,\n  \"Peru\": 32971845.999999996,\n  \"Philippines\": 109581085,\n  \"Poland\": 37846605,\n  \"Polynesia\": 683778,\n  \"Portugal\": 10196707,\n  \"Prince Edward Island, Canada\": 156947,\n  \"Puerto Rico, US\": 2860840,\n  \"Qatar\": 2881060,\n  \"Korea, South\": 51269183,\n  \"Moldova\": 4033963,\n  \"Romania\": 19237682,\n  \"Russia\": 145934460,\n  \"Rwanda\": 12952209,\n  \"Reunion, France\": 895308,\n  \"SIDS Atlantic, and Indian Ocean, Mediterranean and South China Sea (AIMS)\": 16226846,\n  \"SIDS Caribbean\": 43506153,\n  \"SIDS Pacific\": 12343099,\n  \"Saint Barthelemy, France\": 9885,\n  \"Saint Helena\": 6071,\n  \"Saint Kitts and Nevis\": 53192,\n  \"Saint Lucia\": 183629,\n  \"St Martin, France\": 38659,\n  \"Saint Pierre and Miquelon, France\": 5795,\n  \"Saint Vincent and the Grenadines\": 110947,\n  \"Samoa\": 198410,\n  \"San Marino\": 33938,\n  \"Sao Tome and Principe\": 219161,\n  \"Saudi Arabia\": 34813867,\n  \"Senegal\": 16743930,\n  \"Serbia\": 8737370,\n  \"Seychelles\": 98340,\n  \"Shanghai Cooperation Organization (SCO)\": 3254462689,\n  \"Sierra Leone\": 7976985,\n  \"Singapore\": 5850343,\n  \"Sint Maarten, Netherlands\": 42882,\n  \"Slovakia\": 5459643,\n  \"Slovenia\": 2078931.9999999998,\n  \"Small Island Developing States (SIDS)\": 72076098,\n  \"Solomon Islands\": 686878,\n  \"Somalia\": 15893219,\n  \"South Africa\": 59308690,\n  \"South America\": 430759772,\n  \"South Asian Association for Regional Cooperation (SAARC)\": 1856376652,\n  \"South Sudan\": 11193729,\n  \"South-Eastern Asia\": 668619854,\n  \"Southern Africa\": 67503647,\n  \"Southern African Development Community (SADC)\": 363228526,\n  \"Southern Asia\": 1940369605,\n  \"Southern Common Market (MERCOSUR)\": 308470415,\n  \"Southern Europe\": 152215243,\n  \"Spain\": 46754783,\n  \"Sri Lanka\": 21413250,\n  \"West Bank and Gaza\": 5101416,\n  \"Sub-Saharan Africa\": 1094365605,\n  \"Sudan\": 43849269,\n  \"Suriname\": 586634,\n  \"Sweden\": 10099270,\n  \"Switzerland\": 8654618,\n  \"Syria\": 17500657,\n  \"Tajikistan\": 9537642,\n  \"Thailand\": 69799978,\n  \"Timor-Leste\": 1318442,\n  \"Togo\": 8278736.999999999,\n  \"Tokelau\": 1350,\n  \"Tonga\": 105697,\n  \"Trinidad and Tobago\": 1399491,\n  \"Tunisia\": 11818618,\n  \"Turkey\": 84339067,\n  \"Turkmenistan\": 6031187,\n  \"Turks and Caicos Islands\": 38718,\n  \"Tuvalu\": 11792,\n  \"UN-ECE: member countries\": 1301671072,\n  \"UNFPA Regions\": 6435966035,\n  \"UNFPA: Arab States (AS)\": 377302147,\n  \"UNFPA: Asia and the Pacific (AP)\": 4082579031,\n  \"UNFPA: East and Southern Africa (ESA)\": 617189215,\n  \"UNFPA: Eastern Europe and Central Asia (EECA)\": 249965985,\n  \"UNFPA: Latin America and the Caribbean (LAC)\": 649907020,\n  \"UNFPA: West and Central Africa (WCA)\": 459022637,\n  \"UNICEF PROGRAMME REGIONS\": 6518336209,\n  \"UNICEF Programme Regions: East Asia and Pacific (EAPRO)\": 2142209426,\n  \"UNICEF Programme Regions: Eastern Caribbean\": 2406024,\n  \"UNICEF Programme Regions: Eastern and Southern Africa (ESARO)\": 542249263,\n  \"UNICEF Programme Regions: Europe and Central Asia (CEECIS)\": 280885442,\n  \"UNICEF Programme Regions: Latin America\": 646666007,\n  \"UNICEF Programme Regions: Latin America and Caribbean (LACRO)\": 649072031,\n  \"UNICEF Programme Regions: Middle East and North Africa (MENARO)\": 498959354,\n  \"UNICEF Programme Regions: South Asia (ROSA)\": 1856376652,\n  \"UNICEF Programme Regions: West and Central Africa (WCARO)\": 548584041,\n  \"UNICEF REGIONS\": 7794798729,\n  \"UNICEF Regions: East Asia and Pacific\": 2389387290,\n  \"UNICEF Regions: Eastern Europe and Central Asia\": 426819902,\n  \"UNICEF Regions: Eastern and Southern Africa\": 589624762,\n  \"UNICEF Regions: Europe and Central Asia\": 924612983,\n  \"UNICEF Regions: Latin America and Caribbean\": 653962332,\n  \"UNICEF Regions: Middle East and North Africa\": 463374954,\n  \"UNICEF Regions: North America\": 368869644,\n  \"UNICEF Regions: South Asia\": 1856376652,\n  \"UNICEF Regions: Sub-Saharan Africa\": 1138214874,\n  \"UNICEF Regions: West and Central Africa\": 548590112,\n  \"UNICEF Regions: Western Europe\": 497793081,\n  \"UNITED NATIONS Regional Groups of Member States\": 7789099185,\n  \"Uganda\": 45741000,\n  \"Ukraine\": 43733759,\n  \"United Arab Emirates\": 9890400,\n  \"United Kingdom, United Kingdom\": 67886004,\n  \"United Kingdom\": 67886004,\n  \"United Kingdom (and dependencies)\": 68405089,\n  \"United Nations Economic Commission for Africa (UN-ECA)\": 1338826591,\n  \"United Nations Economic Commission for Latin America and the Caribbean (UN-ECLAC)\": 653958849,\n  \"United Nations Economic and Social Commission for Asia and the Pacific (UN-ESCAP) Regions\": 4627631561,\n  \"United Nations Member States\": 7789099174,\n  \"Tanzania\": 59734213,\n  \"Virgin Islands, US\": 104423,\n  \"United States of America\": 331002647,\n  \"US\": 331002647,\n  \"United States of America (and dependencies)\": 334249447,\n  \"Upper-middle-income countries\": 2654816331,\n  \"Uruguay\": 3473727,\n  \"Uzbekistan\": 33469199,\n  \"Vanuatu\": 307150,\n  \"Venezuela\": 28435943,\n  \"Vietnam\": 97338583,\n  \"WB region: East Asia and Pacific (excluding high income)\": 2142225998.9999998,\n  \"WB region: Europe and Central Asia (excluding high income)\": 422714634,\n  \"WB region: Latin America and Caribbean (excluding high income)\": 575044612,\n  \"WB region: Middle East and North Africa (excluding high income)\": 396445990,\n  \"WB region: South Asia (excluding high income)\": 1856376652,\n  \"WB region: Sub-Saharan Africa (excluding high income)\": 1135954340,\n  \"WHO Regions\": 7750010916,\n  \"WHO: African region (AFRO)\": 1120161235,\n  \"WHO: Americas (AMRO)\": 1018121127,\n  \"WHO: Eastern Mediterranean Region (EMRO)\": 725720786,\n  \"WHO: European Region (EURO)\": 932888131,\n  \"WHO: South-East Asia region (SEARO)\": 2021386630,\n  \"WHO: Western Pacific region (WPRO)\": 1931733007,\n  \"Wallis and Futuna Islands\": 11246,\n  \"West African Economic and Monetary Union (UEMOA)\": 130852886,\n  \"Western Africa\": 401861255,\n  \"Western Asia\": 279636774,\n  \"Western Europe\": 196146321,\n  \"Western European and Others Group (WEOG)\": 923721644,\n  \"Western Sahara\": 597330,\n  \"World\": 7794798729,\n  \"World Bank Regional Groups (developing only)\": 6528762227,\n  \"Yemen\": 29825968,\n  \"Zambia\": 18383956,\n  \"Zimbabwe\": 14862927,\n\t\"Guangdong, China\":\t104303132,\n\t\"Shandong, China\":\t100063065,\n\t\"Henan, China\":\t94023567,\n\t\"Sichuan, China\":\t80418200,\n\t\"Jiangsu, China\":\t78659903,\n\t\"Hebei, China\":\t71854202,\n\t\"Hunan, China\":\t65683722,\n\t\"Anhui, China\":\t59500510,\n\t\"Hubei, China\":\t57237740,\n\t\"Zhejiang, China\":\t54426891,\n\t\"Guangxi, China\":\t46026629,\n\t\"Yunnan, China\":\t45966239,\n\t\"Jiangxi, China\":\t44567475,\n\t\"Liaoning, China\":\t43746323,\n\t\"Fujian, China\":\t36894216,\n\t\"Shaanxi, China\":\t37327378,\n\t\"Heilongjiang, China\":\t38312224,\n\t\"Shanxi, China\":\t37022111,\n\t\"Guizhou, China\":\t35806468,\n\t\"Chongqing, China\":\t28846170,\n\t\"Jilin, China\":\t27462297,\n\t\"Gansu, China\":\t25575254,\n\t\"Inner Mongolia, China\":\t24706321,\n\t\"Xinjiang, China\":\t21813334,\n\t\"Shanghai, China\":\t23019148,\n\t\"Beijing, China\":\t19612368,\n\t\"Tianjin, China\":\t12938224,\n\t\"Hainan, China\":\t9261518,\n\t\"Hong Kong, China\":\t7061200,\n\t\"Ningxia, China\":\t6176900,\n\t\"Qinghai, China\":\t5626722,\n\t\"Tibet, China\":\t3002166,\n\t\"Macau, China\":\t552503,\n\t\"New South Wales, Australia\": 8089952,\n    \"Australian Capital Territory, Australia\": 418440,\n    \"Northern Territory, Australia\": 244300,\n\t\"Queensland, Australia\": 5095100,\n\t\"South Australia, Australia\": 1044353,\n\t\"Tasmania, Australia\": 534281,\n\t\"Victoria, Australia\": 6594804,\n\t\"Western Australia, Australia\": 2621680,\n    \"Alberta, Canada\": 4335768,\n    \"British Columbia, Canada\": 5031893,\n    \"New Brunswick, Canada\": 772790,\n    \"Northwest Territories, Canada\": 45047,\n    \"Nova Scotia, Canada\": 965249,\n    \"Ontario, Canada\": 14441694,\n    \"Quebec, Canada\": 8429241,\n    \"Saskatchewan, Canada\": 1170028,\n    \"Newfoundland and Labrador, Canada\": 521542,\n    \"Manitoba, Canada\": 1361997,\n    \"Yukon, Canada\": 35874,\n\n    \"Diamond Princess, Cruise Ship\": 2670,\n    \"Diamond Princess, Canada\": 2670,\n    \"Diamond Princess, US\": 2670,\n    \"Diamond Princess\": 2670,\n    \"Grand Princess, Canada\": 3100,\n    \"Grand Princess, US\": 3100,\n  \n  \n    \"Abruzzo, Italy\": 0,\n    \"Acre, Brazil\": 0,\n    \"Adygea Republic, Russia\": 0,\n    \"Aguascalientes, Mexico\": 0,\n    \"Aichi, Japan\": 0,\n    \"Akita, Japan\": 0,\n    \"Alagoas, Brazil\": 0,\n    \"Altai Krai, Russia\": 0,\n    \"Altai Republic, Russia\": 0,\n    \"Amapa, Brazil\": 0,\n    \"Amazonas, Brazil\": 0,\n    \"Amazonas, Colombia\": 0,\n    \"Amazonas, Peru\": 0,\n    \"Amur Oblast, Russia\": 0,\n    \"Ancash, Peru\": 0,\n    \"Andalusia, Spain\": 0,\n    \"Antioquia, Colombia\": 0,\n    \"Antofagasta, Chile\": 0,\n    \"Aomori, Japan\": 0,\n    \"Apurimac, Peru\": 0,\n    \"Aragon, Spain\": 0,\n    \"Arauca, Colombia\": 0,\n    \"Araucania, Chile\": 0,\n    \"Arequipa, Peru\": 0,\n    \"Arica y Parinacota, Chile\": 0,\n    \"Arkhangelsk Oblast, Russia\": 0,\n    \"Astrakhan Oblast, Russia\": 0,\n    \"Asturias, Spain\": 0,\n    \"Atacama, Chile\": 0,\n    \"Atlantico, Colombia\": 0,\n    \"Ayacucho, Peru\": 0,\n    \"Aysen, Chile\": 0,\n    \"Baden-Wurttemberg, Germany\": 0,\n    \"Bahia, Brazil\": 0,\n    \"Baja California, Mexico\": 0,\n    \"Baja California Sur, Mexico\": 0,\n    \"Baleares, Spain\": 0,\n    \"Bashkortostan Republic, Russia\": 0,\n    \"Basilicata, Italy\": 0,\n    \"Bayern, Germany\": 0,\n    \"Belgorod Oblast, Russia\": 0,\n    \"Berlin, Germany\": 0,\n    \"Biobio, Chile\": 0,\n    \"Bolivar, Colombia\": 0,\n    \"Boyaca, Colombia\": 0,\n    \"Brandenburg, Germany\": 0,\n    \"Bremen, Germany\": 0,\n    \"Bryansk Oblast, Russia\": 0,\n    \"Buryatia Republic, Russia\": 0,\n    \"C. Valenciana, Spain\": 0,\n    \"Cajamarca, Peru\": 0,\n    \"Calabria, Italy\": 0,\n    \"Caldas, Colombia\": 0,\n    \"Callao, Peru\": 0,\n    \"Campania, Italy\": 0,\n    \"Campeche, Mexico\": 0,\n    \"Canarias, Spain\": 0,\n    \"Cantabria, Spain\": 0,\n    \"Capital District, Colombia\": 0,\n    \"Caqueta, Colombia\": 0,\n    \"Casanare, Colombia\": 0,\n    \"Castilla - La Mancha, Spain\": 0,\n    \"Castilla y Leon, Spain\": 0,\n    \"Catalonia, Spain\": 0,\n    \"Cauca, Colombia\": 0,\n    \"Ceara, Brazil\": 0,\n    \"Cesar, Colombia\": 0,\n    \"Ceuta, Spain\": 0,\n    \"Chechen Republic, Russia\": 0,\n    \"Chelyabinsk Oblast, Russia\": 0,\n    \"Cherkasy Oblast, Ukraine\": 0,\n    \"Chernihiv Oblast, Ukraine\": 0,\n    \"Chernivtsi Oblast, Ukraine\": 0,\n    \"Chiapas, Mexico\": 0,\n    \"Chiba, Japan\": 0,\n    \"Chihuahua, Mexico\": 0,\n    \"Choco, Colombia\": 0,\n    \"Chukotka Autonomous Okrug, Russia\": 0,\n    \"Chuvashia Republic, Russia\": 0,\n    \"Ciudad de Mexico, Mexico\": 0,\n    \"Coahuila, Mexico\": 0,\n    \"Colima, Mexico\": 0,\n    \"Coquimbo, Chile\": 0,\n    \"Cordoba, Colombia\": 0,\n    \"Crimea Republic*, Ukraine\": 0,\n    \"Cundinamarca, Colombia\": 0,\n    \"Cusco, Peru\": 0,\n    \"Dagestan Republic, Russia\": 0,\n    \"Distrito Federal, Brazil\": 0,\n    \"Dnipropetrovsk Oblast, Ukraine\": 0,\n    \"Donetsk Oblast, Ukraine\": 0,\n    \"Durango, Mexico\": 0,\n    \"Ehime, Japan\": 0,\n    \"Emilia-Romagna, Italy\": 0,\n    \"Espirito Santo, Brazil\": 0,\n    \"Extremadura, Spain\": 0,\n    \"Friuli Venezia Giulia, Italy\": 0,\n    \"Fukui, Japan\": 0,\n    \"Fukuoka, Japan\": 0,\n    \"Fukushima, Japan\": 0,\n    \"Galicia, Spain\": 0,\n    \"Gifu, Japan\": 0,\n    \"Goias, Brazil\": 0,\n    \"Guainia, Colombia\": 0,\n    \"Guanajuato, Mexico\": 0,\n    \"Guerrero, Mexico\": 0,\n    \"Gunma, Japan\": 0,\n    \"Hamburg, Germany\": 0,\n    \"Hessen, Germany\": 0,\n    \"Hidalgo, Mexico\": 0,\n    \"Hiroshima, Japan\": 0,\n    \"Hokkaido, Japan\": 0,\n    \"Huancavelica, Peru\": 0,\n    \"Huanuco, Peru\": 0,\n    \"Huila, Colombia\": 0,\n    \"Hyogo, Japan\": 0,\n    \"Ibaraki, Japan\": 0,\n    \"Ica, Peru\": 0,\n    \"Ingushetia Republic, Russia\": 0,\n    \"Irkutsk Oblast, Russia\": 0,\n    \"Ishikawa, Japan\": 0,\n    \"Ivano-Frankivsk Oblast, Ukraine\": 0,\n    \"Ivanovo Oblast, Russia\": 0,\n    \"Jalisco, Mexico\": 0,\n    \"Jewish Autonomous Okrug, Russia\": 0,\n    \"Junin, Peru\": 0,\n    \"Kabardino-Balkarian Republic, Russia\": 0,\n    \"Kagawa, Japan\": 0,\n    \"Kagoshima, Japan\": 0,\n    \"Kaliningrad Oblast, Russia\": 0,\n    \"Kalmykia Republic, Russia\": 0,\n    \"Kaluga Oblast, Russia\": 0,\n    \"Kamchatka Krai, Russia\": 0,\n    \"Kanagawa, Japan\": 0,\n    \"Karachay-Cherkess Republic, Russia\": 0,\n    \"Karelia Republic, Russia\": 0,\n    \"Kemerovo Oblast, Russia\": 0,\n    \"Khabarovsk Krai, Russia\": 0,\n    \"Khakassia Republic, Russia\": 0,\n    \"Khanty-Mansi Autonomous Okrug, Russia\": 0,\n    \"Kharkiv Oblast, Ukraine\": 0,\n    \"Kherson Oblast, Ukraine\": 0,\n    \"Khmelnytskyi Oblast, Ukraine\": 0,\n    \"Kiev, Ukraine\": 0,\n    \"Kiev Oblast, Ukraine\": 0,\n    \"Kirov Oblast, Russia\": 0,\n    \"Kirovohrad Oblast, Ukraine\": 0,\n    \"Kochi, Japan\": 0,\n    \"Komi Republic, Russia\": 0,\n    \"Kostroma Oblast, Russia\": 0,\n    \"Krasnodar Krai, Russia\": 0,\n    \"Krasnoyarsk Krai, Russia\": 0,\n    \"Kumamoto, Japan\": 0,\n    \"Kurgan Oblast, Russia\": 0,\n    \"Kursk Oblast, Russia\": 0,\n    \"Kyoto, Japan\": 0,\n    \"La Guajira, Colombia\": 0,\n    \"La Libertad, Peru\": 0,\n    \"La Rioja, Spain\": 0,\n    \"Lambayeque, Peru\": 0,\n    \"Lazio, Italy\": 0,\n    \"Leningrad Oblast, Russia\": 0,\n    \"Liguria, Italy\": 0,\n    \"Lima, Peru\": 0,\n    \"Lipetsk Oblast, Russia\": 0,\n    \"Lombardia, Italy\": 0,\n    \"Loreto, Peru\": 0,\n    \"Los Lagos, Chile\": 0,\n    \"Los Rios, Chile\": 0,\n    \"Luhansk Oblast, Ukraine\": 0,\n    \"Lviv Oblast, Ukraine\": 0,\n    \"Madre de Dios, Peru\": 0,\n    \"Madrid, Spain\": 0,\n    \"Magadan Oblast, Russia\": 0,\n    \"Magallanes, Chile\": 0,\n    \"Magdalena, Colombia\": 0,\n    \"Maranhao, Brazil\": 0,\n    \"Marche, Italy\": 0,\n    \"Mari El Republic, Russia\": 0,\n    \"Mato Grosso, Brazil\": 0,\n    \"Mato Grosso do Sul, Brazil\": 0,\n    \"Maule, Chile\": 0,\n    \"Mecklenburg-Vorpommern, Germany\": 0,\n    \"Melilla, Spain\": 0,\n    \"Meta, Colombia\": 0,\n    \"Metropolitana, Chile\": 0,\n    \"Mexico, Mexico\": 0,\n    \"Michoacan, Mexico\": 0,\n    \"Mie, Japan\": 0,\n    \"Minas Gerais, Brazil\": 0,\n    \"Miyagi, Japan\": 0,\n    \"Miyazaki, Japan\": 0,\n    \"Molise, Italy\": 0,\n    \"Moquegua, Peru\": 0,\n    \"Mordovia Republic, Russia\": 0,\n    \"Morelos, Mexico\": 0,\n    \"Moscow, Russia\": 0,\n    \"Moscow Oblast, Russia\": 0,\n    \"Murcia, Spain\": 0,\n    \"Murmansk Oblast, Russia\": 0,\n    \"Mykolaiv Oblast, Ukraine\": 0,\n    \"Nagano, Japan\": 0,\n    \"Nagasaki, Japan\": 0,\n    \"Nara, Japan\": 0,\n    \"Narino, Colombia\": 0,\n    \"Navarra, Spain\": 0,\n    \"Nayarit, Mexico\": 0,\n    \"Nenets Autonomous Okrug, Russia\": 0,\n    \"Niedersachsen, Germany\": 0,\n    \"Niigata, Japan\": 0,\n    \"Nizhny Novgorod Oblast, Russia\": 0,\n    \"Nordrhein-Westfalen, Germany\": 0,\n    \"Norte de Santander, Colombia\": 0,\n    \"North Ossetia - Alania Republic, Russia\": 0,\n    \"Novgorod Oblast, Russia\": 0,\n    \"Novosibirsk Oblast, Russia\": 0,\n    \"Nuble, Chile\": 0,\n    \"Nuevo Leon, Mexico\": 0,\n    \"OHiggins, Chile\": 0,\n    \"Oaxaca, Mexico\": 0,\n    \"Odessa Oblast, Ukraine\": 0,\n    \"Oita, Japan\": 0,\n    \"Okayama, Japan\": 0,\n    \"Okinawa, Japan\": 0,\n    \"Omsk Oblast, Russia\": 0,\n    \"Orel Oblast, Russia\": 0,\n    \"Orenburg Oblast, Russia\": 0,\n    \"Osaka, Japan\": 0,\n    \"P.A. Bolzano, Italy\": 0,\n    \"P.A. Trento, Italy\": 0,\n    \"Pais Vasco, Spain\": 0,\n    \"Para, Brazil\": 0,\n    \"Paraiba, Brazil\": 0,\n    \"Parana, Brazil\": 0,\n    \"Pasco, Peru\": 0,\n    \"Penza Oblast, Russia\": 0,\n    \"Perm Krai, Russia\": 0,\n    \"Pernambuco, Brazil\": 0,\n    \"Piaui, Brazil\": 0,\n    \"Piemonte, Italy\": 0,\n    \"Piura, Peru\": 0,\n    \"Poltava Oblast, Ukraine\": 0,\n    \"Port Quarantine, Japan\": 0,\n    \"Primorsky Krai, Russia\": 0,\n    \"Pskov Oblast, Russia\": 0,\n    \"Puebla, Mexico\": 0,\n    \"Puglia, Italy\": 0,\n    \"Puno, Peru\": 0,\n    \"Putumayo, Colombia\": 0,\n    \"Queretaro, Mexico\": 0,\n    \"Quindio, Colombia\": 0,\n    \"Quintana Roo, Mexico\": 0,\n    \"Rheinland-Pfalz, Germany\": 0,\n    \"Rio Grande do Norte, Brazil\": 0,\n    \"Rio Grande do Sul, Brazil\": 0,\n    \"Rio de Janeiro, Brazil\": 0,\n    \"Risaralda, Colombia\": 0,\n    \"Rivne Oblast, Ukraine\": 0,\n    \"Rondonia, Brazil\": 0,\n    \"Roraima, Brazil\": 0,\n    \"Rostov Oblast, Russia\": 0,\n    \"Ryazan Oblast, Russia\": 0,\n    \"Saarland, Germany\": 0,\n    \"Sachsen, Germany\": 0,\n    \"Sachsen-Anhalt, Germany\": 0,\n    \"Saga, Japan\": 0,\n    \"Saint Petersburg, Russia\": 0,\n    \"Saitama, Japan\": 0,\n    \"Sakha (Yakutiya) Republic, Russia\": 0,\n    \"Sakhalin Oblast, Russia\": 0,\n    \"Samara Oblast, Russia\": 0,\n    \"San Andres y Providencia, Colombia\": 0,\n    \"San Luis Potosi, Mexico\": 0,\n    \"San Martin, Peru\": 0,\n    \"Santa Catarina, Brazil\": 0,\n    \"Santander, Colombia\": 0,\n    \"Sao Paulo, Brazil\": 0,\n    \"Saratov Oblast, Russia\": 0,\n    \"Sardegna, Italy\": 0,\n    \"Schleswig-Holstein, Germany\": 0,\n    \"Sergipe, Brazil\": 0,\n    \"Sevastopol*, Ukraine\": 0,\n    \"Shiga, Japan\": 0,\n    \"Shimane, Japan\": 0,\n    \"Shizuoka, Japan\": 0,\n    \"Sicilia, Italy\": 0,\n    \"Sinaloa, Mexico\": 0,\n    \"Smolensk Oblast, Russia\": 0,\n    \"Sonora, Mexico\": 0,\n    \"Stavropol Krai, Russia\": 0,\n    \"Sucre, Colombia\": 0,\n    \"Sumy Oblast, Ukraine\": 0,\n    \"Sverdlovsk Oblast, Russia\": 0,\n    \"Tabasco, Mexico\": 0,\n    \"Tacna, Peru\": 0,\n    \"Tamaulipas, Mexico\": 0,\n    \"Tambov Oblast, Russia\": 0,\n    \"Tarapaca, Chile\": 0,\n    \"Tatarstan Republic, Russia\": 0,\n    \"Ternopil Oblast, Ukraine\": 0,\n    \"Thuringen, Germany\": 0,\n    \"Tlaxcala, Mexico\": 0,\n    \"Tocantins, Brazil\": 0,\n    \"Tochigi, Japan\": 0,\n    \"Tokushima, Japan\": 0,\n    \"Tokyo, Japan\": 0,\n    \"Tolima, Colombia\": 0,\n    \"Tomsk Oblast, Russia\": 0,\n    \"Toscana, Italy\": 0,\n    \"Tottori, Japan\": 0,\n    \"Toyama, Japan\": 0,\n    \"Tula Oblast, Russia\": 0,\n    \"Tumbes, Peru\": 0,\n    \"Tver Oblast, Russia\": 0,\n    \"Tyumen Oblast, Russia\": 0,\n    \"Tyva Republic, Russia\": 0,\n    \"Ucayali, Peru\": 0,\n    \"Udmurt Republic, Russia\": 0,\n    \"Ulyanovsk Oblast, Russia\": 0,\n    \"Umbria, Italy\": 0,\n    \"Unknown, Brazil\": 0,\n    \"Unknown, Chile\": 0,\n    \"Unknown, Colombia\": 0,\n    \"Unknown, Germany\": 0,\n    \"Unknown, Japan\": 0,\n    \"Unknown, Peru\": 0,\n    \"Unknown, Spain\": 0,\n    \"Valle d'Aosta, Italy\": 0,\n    \"Valle del Cauca, Colombia\": 0,\n    \"Valparaiso, Chile\": 0,\n    \"Vaupes, Colombia\": 0,\n    \"Veneto, Italy\": 0,\n    \"Veracruz, Mexico\": 0,\n    \"Vichada, Colombia\": 0,\n    \"Vinnytsia Oblast, Ukraine\": 0,\n    \"Vladimir Oblast, Russia\": 0,\n    \"Volgograd Oblast, Russia\": 0,\n    \"Vologda Oblast, Russia\": 0,\n    \"Volyn Oblast, Ukraine\": 0,\n    \"Voronezh Oblast, Russia\": 0,\n    \"Wakayama, Japan\": 0,\n    \"Yamagata, Japan\": 0,\n    \"Yamaguchi, Japan\": 0,\n    \"Yamalo-Nenets Autonomous Okrug, Russia\": 0,\n    \"Yamanashi, Japan\": 0,\n    \"Yaroslavl Oblast, Russia\": 0,\n    \"Yucatan, Mexico\": 0,\n    \"Zabaykalsky Krai, Russia\": 0,\n    \"Zacatecas, Mexico\": 0,\n    \"Zakarpattia Oblast, Ukraine\": 0,\n    \"Zaporizhia Oblast, Ukraine\": 0,\n    \"Zhytomyr Oblast, Ukraine\": 0,\n\n    \"Blekinge, Sweden\": 0,\n    \"Dalarna, Sweden\": 0,\n    \"Gavleborg, Sweden\": 0,\n    \"Gotland, Sweden\": 0,\n    \"Guaviare, Colombia\": 0,\n    \"Halland, Sweden\": 0,\n    \"Jamtland Harjedalen, Sweden\": 0,\n    \"Jonkoping, Sweden\": 0,\n    \"Kalmar, Sweden\": 0,\n    \"Kronoberg, Sweden\": 0,\n    \"Norrbotten, Sweden\": 0,\n    \"Orebro, Sweden\": 0,\n    \"Ostergotland, Sweden\": 0,\n    \"Skane, Sweden\": 0,\n    \"Sormland, Sweden\": 0,\n    \"Stockholm, Sweden\": 0,\n    \"Uppsala, Sweden\": 0,\n    \"Varmland, Sweden\": 0,\n    \"Vasterbotten, Sweden\": 0,\n    \"Vasternorrland, Sweden\": 0,\n    \"Vastmanland, Sweden\": 0,\n    \"Vastra Gotaland, Sweden\": 0\n};\n","export const RATES = {\n\n  // https://en.wikipedia.org/wiki/COVID-19_testing\n  \"Afghanistan\": 38460,\n  \"Albania\": 14269,\n  \"Algeria\": 18928,\n  \"Argentina\": 189278,\n  \"Armenia\": 50397,\n  \"Australia\": 1617462,\n  \"Australian Capital Territory, Australia\": 15253,\n  \"New South Wales, Australia\": 464351,\n  \"Northern Territory, Australia\": 7369,\n  \"Queensland, Australia\": 180371,\n  \"South Australia, Australia\": 91597,\n  \"Tasmania, Australia\": 25644,\n  \"Victoria, Australia\": 501565,\n  \"Western Australia, Australia\": 78308,\n  \"Austria\": 500921,\n  \"Azerbaijan\": 298648,\n  \"Bahrain\": 276552,\n  \"Bangladesh\": 425505,\n  \"Barbados\": 4664,\n  \"Belarus\": 562945,\n  \"Belgium\": 768706,\n  \"Bhutan\": 18821,\n  \"Bolivia\": 21205,\n  \"Bosnia and Herzegovina\": 72514,\n  \"Brazil\": 10697205,\n  \"Bulgaria\": 74096,\n  \"Burkina Faso\": 6642,\n  \"Cameroon\": 10268,\n  \"Canada\": 1930141,\n  \"Alberta, Canada\": 298696,\n  \"British Columbia, Canada\": 158040,\n  \"Manitoba, Canada\": 49591,\n  \"New Brunswick, Canada\": 34400,\n  \"Newfoundland and Labrador, Canda\": 13449,\n  \"Northwest Territories, Canada\": 2322,\n  \"Nova Scotia, Canada\": 46525,\n  \"Nunavut, Canada\": 1047,\n  \"Ontario, Canada\": 866889,\n  \"Prince Edward Island, Canada\": 7584,\n  \"Quebec, Canada\": 489875,\n  \"Saskatchewan, Canada\": 52229,\n  \"Yukon, Canadaa\": 1210,\n  \"Chile\": 708773,\n  \"Guangdong, China\": 6790000,\n  \"Colombia\": 222210,\n  \"Costa Rica\": 22910,\n  \"Croatia\": 61482,\n  \"Cuba\": 92629,\n  \"Cyprus\": 99733,\n  \"Czechia\": 471521,\n  \"Denmark\": 516141,\n  \"Congo (Kinshasa)\": 9508,\n  \"Ecuador\": 81392,\n  \"Egypt\": 141002,\n  \"El Salvador\": 104060,\n  \"Estonia\": 90621,\n  \"Ethiopia\": 87264,\n  \"Finland\": 160177,\n  \"France\": 1493333,\n  \"Germany\": 4348880,\n  \"Ghana\": 137924,\n  \"Greece\": 98877,\n  \"Grenada\": 1781,\n  \"Guinea\": 7369,\n  \"Hong Kong\": 154989,\n  \"Hungary\": 210749,\n  \"Iceland\": 62802,\n  \"India\": 4916116,\n  \"Indonesia\": 246433,\n  \"Iran\": 1040289,\n  \"Iraq\": 120604,\n  \"Ireland\": 348416,\n  \"Israel\": 662916,\n  \"Italy\": 4236535,\n  \"Ivory Coast\": 18303,\n  \"Jamaica\": 7465,\n  \"Japan\": 471829,\n  \"Kuwait\": 120000,\n  \"Kazakhstan\": 812881,\n  \"Kenya\": 32097,\n  \"Kosovo\": 14635,\n  \"Kyrgyzstan\": 58030,\n  \"Latvia\": 118322,\n  \"Lebanon\": 53269,\n  \"Libya\": 6871,\n  \"Lithuania\": 335686,\n  \"Luxembourg\": 88051,\n  \"Madagascar\": 11311,\n  \"Malawi\": 961,\n  \"Malaysia\": 560738,\n  \"Maldives\": 17174,\n  \"Malta\": 64334,\n  \"Mauritius\": 120358,\n  \"Mexico\": 231998,\n  \"Montenegro\": 8534,\n  \"Morocco\": 221154,\n  \"Mozambique\": 3923,\n  \"Myanmar\": 24710,\n  \"Nepal\": 200646,\n  \"Netherlands\": 378912,\n  \"New Zealand\": 267435,\n  \"Nigeria\": 76802,\n  \"North Korea\": 740,\n  \"North Macedonia\": 30302,\n  \"Northern Cyprus\": 31346,\n  \"Norway\": 223045,\n  \"Oman\": 100000,\n  \"Pakistan\": 730453,\n  \"Palestine\": 34511,\n  \"Panama\": 38014,\n  \"Paraguay\": 13096,\n  \"Peru\": 1203985,\n  \"Philippines\": 441396,\n  \"Poland\": 931520,\n  \"Portugal\": 689705,\n  \"Qatar\": 259646,\n  \"Romania\": 410000,\n  \"Russia\": 13254678,\n  \"Rwanda\": 74068,\n  \"Saint Lucia\": 898,\n  \"Saudi Arabia\": 976815,\n  \"Senegal\": 22481,\n  \"Scotland\": 27518,\n  \"Serbia\": 233479,\n  \"Singapore\": 408495,\n  \"Slovakia\": 190426,\n  \"Slovenia\": 84684,\n  \"South Africa\": 850871,\n  \"South Korea\": 993840,\n  \"Spain\": 4063843,\n  \"Sri Lanka\": 75239,\n  \"Sudan\": 7825,\n  \"Sweden\": 275500,\n  \"Switzerland\": 372146,\n  \"Taiwan\": 73601,\n  \"Tanzania\": 2680,\n  \"Thailand\": 89791,\n  \"Trinidad and Tobago\": 2271,\n  \"Tunisia\": 52874,\n  \"Turkey\": 2303258,\n  \"Uganda\": 70117,\n  \"Ukraine\": 277712,\n  \"United Arab Emirates\": 2502566,\n  \"United Kingdom\": 5731576,\n  \"US\": 20615303,\n  \"Uruguay\": 39469,\n  \"Uzbekistan\": 371000,\n  \"Venezuela\": 832526,\n  \"Vietnam\": 261004,\n  \"Zimbabwe\": 8244,\n\n  // https://docs.google.com/spreadsheets/u/2/d/e/2PACX-1vRwAqp96T9sYYq2-i7Tj0pvTf6XVHjDSMIKBdZHXiCGGdNC0ypEU9NbngS8mxea55JuCFuua1MUeOj5/pubhtml#\n  \"Alaska, US\":\t        7223,\n  \"Alabama, US\":        20896,\n  \"Arkansas, US\":       14951,\n  \"AS\":                 20,\n  \"Arizona, US\":        37178,\n  \"California, US\":     163500,\n  \"Colorado, US\":       31180,\n  \"Connecticut, US\":    33502,\n  \"District of Columbia, US\": 8724,\n  \"Delaware, US\":       9892,\n  \"Florida, US\":        156688,\n  \"Georgia, US\":        41404,\n  \"Guam\":               754,\n  \"Hawaii, US\":         16149,\n  \"Iowa, US\":           14973,\n  \"Idaho, US\":          13094,\n  \"Illinois, US\":       80857,\n  \"Indiana, US\":        32133,\n  \"Kansas, US\":         10775,\n  \"Kentucky, US\":       23170,\n  \"Louisiana, US\":      86919,\n  \"Massachusetts, US\":  94958,\n  \"Maryland, US\":       41529,\n  \"Maine, US\":          6648,\n  \"Michigan, US\":       52866,\n  \"Minnesota, US\":      32294,\n  \"Missouri, US\":       40480,\n  \"MP\":                 38,               /* unkown */\n  \"Mississippi, US\":    20892,\n  \"Montana, US\":        7860,\n  \"North Carolina, US\": 47809,\n  \"North Dakota, US\":   8990,\n  \"Nebraska, US\":       8833,\n  \"New Hampshire, US\":  9958,\n  \"New Jersey, US\":     107192,\n  \"New Mexico, US\":     23931,\n  \"Nevada, US\":         21771,\n  \"New York, US\":       391549,\n  \"Ohio, US\":           55985,\n  \"Oklahoma, US\":       20279,\n  \"Oregon, US\":         25627,\n  \"Pennsylvania, US\":   105602,\n  \"Puerto Rico\":        5386,\n  \"Rhode Island, US\":   12409,\n  \"South Carolina, US\": 26296,\n  \"South Dakota, US\":   7147,\n  \"Tennessee, US\":      59849,\n  \"Texas, US\":          106134,\n  \"Utah, US\":           38373,\n  \"Virginia, US\":       33026,\n  \"Virgin Islands\":     323,\n  \"Vermont, US\":        8181,\n  \"Washington, US\":     92999,\n  \"Wisconsin, US\":      34309,\n  \"West Virginia, US\":  13863,\n  \"Wyoming, US\":        4975\n};\n","import {DatasourceProvider} from \"./DatasourceProvider\";\n\nimport Papa from \"papaparse\";\nimport {Data, Dataset, Datasource} from \"./Datasource\";\n\nimport * as Population from \"../Population\";\nimport * as Testing from \"../TestingRates\";\n\nexport class JHDatasourceProvider extends DatasourceProvider {\n\n    BLACKLIST_NAMES = [\n        \"Recovered, Canada\", \"MS Zaandam\", \"\", \"Recovered, US\", \"Diamond Princess\", \"Diamond Princess, US\",\n        \"Diamond Princess, Canada\", \"Grand Princess, US\", \"Grand Princess, Canada\", \"Veteran Hospitals, US\",\n        \"Federal Bureau of Prisons, US\", \"US Military, US\"\n    ];\n\n    constructor() {\n        super(\"Johns Hopkins CSSE COVID-19\");\n        this.historyConfirmedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\n        this.historyRecoveredUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv\";\n        this.historyDeceasedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\";\n\n        this.historyUSConfirmedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv\";\n        this.historyUSDeceasedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv\";\n\n        this.liveUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases.csv\";\n        this.liveCountriesUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\n        this.liveUSStatesUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_state.csv\";\n    }\n\n    getDatasource = (loadUScounties, callback) => {\n        let ds = new Datasource();\n        // load confirmed data\n        this.loadFromUrl(this.historyConfirmedUrl, (rawConfirmed) => {\n            this.loadFromUrl(this.historyRecoveredUrl, (rawRecovered) => {\n                this.loadFromUrl(this.historyDeceasedUrl, (rawDeceased) => {\n                    this.loadFromUrl(this.historyUSConfirmedUrl, (rawUSConfirmed) => {\n                        this.loadFromUrl(this.historyUSDeceasedUrl, (rawUSDeceased) => {\n                            this.loadFromUrl(this.liveCountriesUrl, (rawCountries) => {\n                                this.loadFromUrl(this.liveUSStatesUrl, (rawUSStates) => {\n                                    this.loadFromUrl(this.liveUrl, (rawLive) => {\n                                        // load history\n                                        this.parseHistory(ds, rawConfirmed.data, rawRecovered.data, rawDeceased.data, callback);\n                                        if(loadUScounties) {\n                                            this.parseHistoryUS(ds, rawUSConfirmed.data, rawUSDeceased.data);\n                                        }\n                                        // load live stats\n                                        ds.datasets.push(new Dataset(new Date().toLocaleDateString().replace(\"2020\", \"20\")));\n                                        if (loadUScounties) {\n                                            this.parseLive(ds, rawLive.data);\n                                        }\n                                        this.parseLiveCountries(ds, rawCountries.data);\n                                        this.parseLiveUSStates(ds, rawUSStates.data);\n                                        this.fillEmpty(ds);\n                                        // infer data\n                                        this.computeActive(ds);\n                                        this.computeConfirmedProjected(ds);\n                                        this.computeContainmentScore(ds);\n                                        this.computeTotals(ds);\n\n                                        /*let missing = [];\n                                        Object.keys(ds.locations).map((location) => {\n                                           if(!Object.keys(Population.ABSOLUTE).includes(location)) {\n                                               missing.push(location);\n                                           }\n                                        });\n                                        console.log(JSON.stringify(missing));*/\n\n                                        callback(ds);\n                                    });\n                                });\n                            });\n                        });\n                    });\n                });\n            })\n        });\n    };\n\n    parseLive(ds, tableCountries) {\n        let dataset = ds.datasets[ds.datasets.length - 1].data;\n        let header = true;\n        for(let row of tableCountries) {\n            if(header) {\n                header = false;\n                continue;\n            }\n            if(row.length < 3) {\n                continue\n            }\n            let name = row[11];\n            if(this.BLACKLIST_NAMES.includes(name)) {\n                continue;\n            }\n            ds.locations[name] = [row[4], row[3]];\n\n            let data = new Data();\n            data.absolute.current.confirmed = Number(row[5]);\n            data.absolute.current.recovered= Number(row[7]);\n            data.absolute.current.deceased = Number(row[6]);\n\n            data.ppm.current.confirmed = this.ppm(name, data.absolute.current.confirmed);\n            data.ppm.current.recovered = this.ppm(name, data.absolute.current.recovered);\n            data.ppm.current.deceased = this.ppm(name, data.absolute.current.deceased);\n\n            if(ds.datasets[ds.datasets.length - 3].data[name]) {\n                data.absolute.growthLast1Day.confirmed = data.absolute.current.confirmed - ds.datasets[ds.datasets.length - 3].data[name].absolute.current.confirmed;\n                data.absolute.growthLast1Day.recovered = data.absolute.current.recovered - ds.datasets[ds.datasets.length - 3].data[name].absolute.current.recovered;\n                data.absolute.growthLast1Day.deceased = data.absolute.current.deceased - ds.datasets[ds.datasets.length - 3].data[name].absolute.current.deceased;\n\n                data.ppm.growthLast1Day.confirmed = this.ppm(name, data.absolute.growthLast1Day.confirmed);\n                data.ppm.growthLast1Day.recovered = this.ppm(name, data.absolute.growthLast1Day.recovered);\n                data.ppm.growthLast1Day.deceased = this.ppm(name, data.absolute.growthLast1Day.deceased);\n            }\n\n            if(ds.datasets[ds.datasets.length - 4].data[name]) {\n                data.absolute.growthLast3Days.confirmed = data.absolute.current.confirmed - ds.datasets[ds.datasets.length - 4].data[name].absolute.current.confirmed;\n                data.absolute.growthLast3Days.recovered = data.absolute.current.recovered - ds.datasets[ds.datasets.length - 4].data[name].absolute.current.recovered;\n                data.absolute.growthLast3Days.deceased = data.absolute.current.deceased - ds.datasets[ds.datasets.length - 4].data[name].absolute.current.deceased;\n\n                data.ppm.growthLast3Days.confirmed = this.ppm(name, data.absolute.growthLast3Days.confirmed);\n                data.ppm.growthLast3Days.recovered = this.ppm(name, data.absolute.growthLast3Days.recovered);\n                data.ppm.growthLast3Days.deceased = this.ppm(name, data.absolute.growthLast3Days.deceased);\n            }\n\n            if(ds.datasets[ds.datasets.length - 8].data[name]) {\n                data.absolute.growthLast7Days.confirmed = data.absolute.current.confirmed - ds.datasets[ds.datasets.length - 8].data[name].absolute.current.confirmed;\n                data.absolute.growthLast7Days.recovered = data.absolute.current.recovered - ds.datasets[ds.datasets.length - 8].data[name].absolute.current.recovered;\n                data.absolute.growthLast7Days.deceased = data.absolute.current.deceased - ds.datasets[ds.datasets.length - 8].data[name].absolute.current.deceased;\n\n                data.ppm.growthLast7Days.confirmed = this.ppm(name, data.absolute.growthLast7Days.confirmed);\n                data.ppm.growthLast7Days.recovered = this.ppm(name, data.absolute.growthLast7Days.recovered);\n                data.ppm.growthLast7Days.deceased = this.ppm(name, data.absolute.growthLast7Days.deceased);\n            }\n\n            dataset[name] = data;\n        }\n    }\n\n    parseLiveCountries(ds, tableCountries) {\n        // ds.datasets.push(new Dataset(new Date().toLocaleDateString().replace(\"2020\", \"20\")));\n        let dataset = ds.datasets[ds.datasets.length - 1].data;\n        let header = true;\n        for(let row of tableCountries) {\n            if(header) {\n                header = false;\n                continue;\n            }\n            if(row.length < 3) {\n                continue\n            }\n            let name = row[0];\n            if(this.BLACKLIST_NAMES.includes(name)) {\n                continue;\n            }\n            ds.locations[name] = [row[3], row[2]];\n\n            let data = new Data();\n            data.absolute.current.confirmed = Number(row[4]);\n            data.absolute.current.recovered= Number(row[6]);\n            data.absolute.current.deceased = Number(row[5]);\n\n            data.ppm.current.confirmed = this.ppm(name, data.absolute.current.confirmed);\n            data.ppm.current.recovered = this.ppm(name, data.absolute.current.recovered);\n            data.ppm.current.deceased = this.ppm(name, data.absolute.current.deceased);\n\n            if(ds.datasets[ds.datasets.length - 3].data[name]) {\n                data.absolute.growthLast1Day.confirmed = data.absolute.current.confirmed - ds.datasets[ds.datasets.length - 3].data[name].absolute.current.confirmed;\n                data.absolute.growthLast1Day.recovered = data.absolute.current.recovered - ds.datasets[ds.datasets.length - 3].data[name].absolute.current.recovered;\n                data.absolute.growthLast1Day.deceased = data.absolute.current.deceased - ds.datasets[ds.datasets.length - 3].data[name].absolute.current.deceased;\n\n                data.ppm.growthLast1Day.confirmed = this.ppm(name, data.absolute.growthLast1Day.confirmed);\n                data.ppm.growthLast1Day.recovered = this.ppm(name, data.absolute.growthLast1Day.recovered);\n                data.ppm.growthLast1Day.deceased = this.ppm(name, data.absolute.growthLast1Day.deceased);\n            }\n\n            if(ds.datasets[ds.datasets.length - 4].data[name]) {\n                data.absolute.growthLast3Days.confirmed = data.absolute.current.confirmed - ds.datasets[ds.datasets.length - 4].data[name].absolute.current.confirmed;\n                data.absolute.growthLast3Days.recovered = data.absolute.current.recovered - ds.datasets[ds.datasets.length - 4].data[name].absolute.current.recovered;\n                data.absolute.growthLast3Days.deceased = data.absolute.current.deceased - ds.datasets[ds.datasets.length - 4].data[name].absolute.current.deceased;\n\n                data.ppm.growthLast3Days.confirmed = this.ppm(name, data.absolute.growthLast3Days.confirmed);\n                data.ppm.growthLast3Days.recovered = this.ppm(name, data.absolute.growthLast3Days.recovered);\n                data.ppm.growthLast3Days.deceased = this.ppm(name, data.absolute.growthLast3Days.deceased);\n            }\n\n            if(ds.datasets[ds.datasets.length - 8].data[name]) {\n                data.absolute.growthLast7Days.confirmed = data.absolute.current.confirmed - ds.datasets[ds.datasets.length - 8].data[name].absolute.current.confirmed;\n                data.absolute.growthLast7Days.recovered = data.absolute.current.recovered - ds.datasets[ds.datasets.length - 8].data[name].absolute.current.recovered;\n                data.absolute.growthLast7Days.deceased = data.absolute.current.deceased - ds.datasets[ds.datasets.length - 8].data[name].absolute.current.deceased;\n\n                data.ppm.growthLast7Days.confirmed = this.ppm(name, data.absolute.growthLast7Days.confirmed);\n                data.ppm.growthLast7Days.recovered = this.ppm(name, data.absolute.growthLast7Days.recovered);\n                data.ppm.growthLast7Days.deceased = this.ppm(name, data.absolute.growthLast7Days.deceased);\n            }\n\n            dataset[name] = data;\n        }\n    }\n\n    parseLiveUSStates(ds, tableUSStates) {\n        let dataset = ds.datasets[ds.datasets.length - 1].data;\n        let header = true;\n        for(let row of tableUSStates) {\n            if(header) {\n                header = false;\n                continue;\n            }\n            if(row.length < 3) {\n                continue\n            }\n            let name = \"\";\n            if(row[0]) {\n                name += row[0] + \", \";\n            }\n            if(row[1]) {\n                name += row[1];\n            }\n            if(this.BLACKLIST_NAMES.includes(name)) {\n                continue;\n            }\n            ds.locations[name] = [row[4], row[3]];\n\n            let data = new Data();\n            data.absolute.current.confirmed = Number(row[5]);\n            data.absolute.current.recovered= Number(row[7]);\n            data.absolute.current.deceased = Number(row[6]);\n\n            data.ppm.current.confirmed = this.ppm(name, data.absolute.current.confirmed);\n            data.ppm.current.recovered = this.ppm(name, data.absolute.current.recovered);\n            data.ppm.current.deceased = this.ppm(name, data.absolute.current.deceased);\n\n            // data.absolute.growthLast1Day.confirmed = -1;\n            // data.absolute.growthLast1Day.recovered = -1;\n            // data.absolute.growthLast1Day.deceased = -1;\n\n            data.ppm.growthLast1Day.confirmed = -1;\n            data.ppm.growthLast1Day.recovered = -1;\n            data.ppm.growthLast1Day.deceased = -1;\n\n            dataset[name] = data;\n        }\n    }\n\n    fillEmpty = (ds) => {\n        ds.datasets.map((dataset, dateIndex) => {\n            Object.keys(ds.locations).map((name, nameIndex) => {\n                if(!(name in dataset.data)) {\n\n                    let lastData = ds.datasets[ds.datasets.length - 2].data[name];\n\n                    let data = new Data();\n                    data.absolute.current.confirmed = lastData ? lastData.absolute.current.confirmed : -1;\n                    data.absolute.current.recovered = lastData ? lastData.absolute.current.recovered : -1;\n                    data.absolute.current.deceased = lastData ? lastData.absolute.current.deceased : -1;\n\n                    data.absolute.growthLast1Day.confirmed = lastData ? lastData.absolute.growthLast1Day.confirmed : -1;\n                    data.absolute.growthLast1Day.recovered = lastData ? lastData.absolute.growthLast1Day.recovered : -1;\n                    data.absolute.growthLast1Day.deceased = lastData ? lastData.absolute.growthLast1Day.deceased : -1;\n\n                    data.absolute.growthLast3Days.confirmed = lastData ? lastData.absolute.growthLast3Days.confirmed : -1;\n                    data.absolute.growthLast3Days.recovered = lastData ? lastData.absolute.growthLast3Days.recovered : -1;\n                    data.absolute.growthLast3Days.deceased = lastData ? lastData.absolute.growthLast3Days.deceased : -1;\n\n                    data.absolute.growthLast7Days.confirmed = lastData ? lastData.absolute.growthLast7Days.confirmed : -1;\n                    data.absolute.growthLast7Days.recovered = lastData ? lastData.absolute.growthLast7Days.recovered : -1;\n                    data.absolute.growthLast7Days.deceased = lastData ? lastData.absolute.growthLast7Days.deceased : -1;\n\n                    dataset.data[name] = data;\n                }\n            });\n        });\n    };\n\n    parseHistory = (ds, tableConfirmed, tableRecovered, tableDeceased) => {\n        this.parseTable(ds, \"confirmed\", tableConfirmed, true);\n        this.parseTable(ds, \"recovered\", tableRecovered, false);\n        this.parseTable(ds, \"deceased\", tableDeceased, false);\n    };\n\n    parseHistoryUS = (ds, tableUSConfirmed, tableUSDeceased) => {\n        this.parseTable(ds, \"confirmed\", tableUSConfirmed, false, true);\n        this.parseTable(ds, \"deceased\", tableUSDeceased, false, true, 1);\n    };\n\n    computeTotals = (ds) => {\n        ds.datasets.map((dataset, datasetIndex) => {\n            Object.keys(dataset.data).map((name, nameIndex) => {\n                let locationData = dataset.data[name];\n\n                // sums\n                if(\n                    !name.endsWith(\", US\") &&\n                    name!==\"China\" &&\n                    name!==\"Australia\"\n                ) {\n                    dataset.totalConfirmed += locationData.absolute.current.confirmed;\n                    dataset.totalRecovered += locationData.absolute.current.recovered;\n                    dataset.totalDeceased += locationData.absolute.current.deceased;\n                    dataset.totalActive += locationData.absolute.current.active;\n                    dataset.totalConfirmedProjected += Math.max(locationData.absolute.current.confirmed,\n                        locationData.absolute.current.confirmedProjected);\n                }\n\n                // track max\n                ds.absoluteMaxValue = Math.max(ds.absoluteMaxValue, locationData.absolute.current.confirmed);\n                ds.absoluteMaxValue = Math.max(ds.absoluteMaxValue, locationData.absolute.current.confirmedProjected);\n                ds.ppmMaxValue = Math.max(ds.ppmMaxValue, locationData.ppm.current.confirmed);\n                ds.ppmMaxValue = Math.max(ds.ppmMaxValue, locationData.ppm.current.confirmedProjected);\n            });\n        });\n    };\n\n    computeContainmentScore = (ds) => {\n        ds.datasets.map((dataset, dateIndex) => {\n            Object.keys(dataset.data).map((name, nameIndex) => {\n                let locationData = dataset.data[name];\n                if(dateIndex < ds.datasets.length - 1) {\n                    let g1 = 0.5 * locationData.absolute.growthLast1Day.confirmed / locationData.absolute.current.confirmed;\n                    let g3 = 0.3 * locationData.absolute.growthLast3Days.confirmed / locationData.absolute.current.confirmed;\n                    let g7 = 0.2 * locationData.absolute.growthLast7Days.confirmed / locationData.absolute.current.confirmed;\n                    let g = (g1 + g3 + g7);\n                    if (g >= 1) {\n                        locationData.containmentScore = 0;\n                    } else if (g >= 0.5) {\n                        locationData.containmentScore = 1;\n                    } else if (g >= 0.2) {\n                        locationData.containmentScore = 2;\n                    } else if (g >= 0.1) {\n                        locationData.containmentScore = 3;\n                    } else if (g >= 0.05) {\n                        locationData.containmentScore = 4;\n                    } else if (g >= 0.02) {\n                        locationData.containmentScore = 5;\n                    } else if (g >= 0.01) {\n                        locationData.containmentScore = 6;\n                    } else if (g >= 0.005) {\n                        locationData.containmentScore = 7;\n                    } else if (g >= 0.002) {\n                        locationData.containmentScore = 8;\n                    } else if (g >= 0.001) {\n                        locationData.containmentScore = 9;\n                    } else if (g >= 0.0) {\n                        locationData.containmentScore = 10;\n                    }\n                } else {\n                    // take score from yesterday\n                    if(ds.datasets[ds.datasets.length - 2].data[name].absolute.current.confirmed === -1) {\n                        return;\n                    }\n                    locationData.containmentScore = ds.datasets[ds.datasets.length - 2].data[name].containmentScore;\n                }\n            });\n        });\n    };\n\n    computeConfirmedProjected = (ds) => {\n        // compute global average testing rate\n        let avgTested = 0;\n        let avgPopulation = 0;\n        let countTested = 0;\n        let countPopulation = 0;\n        Object.keys(ds.locations).map((name, index) => {\n            if(Testing.RATES[name] && Population.ABSOLUTE[name]) {\n                avgTested += Testing.RATES[name];\n                avgPopulation += Population.ABSOLUTE[name];\n                countTested++;\n                countPopulation++;\n            }\n            else {\n                // console.log(\"No testing rates or population data for '\" + name + \"'.\")\n            }\n        });\n        avgTested /= countTested;\n        avgPopulation /= countPopulation;\n        let globalTestingRate = avgTested / avgPopulation;\n        ds.datasets.map((dataset, datasetIndex) => {\n            Object.keys(dataset.data).map((name, locationIndex) => {\n                if(Testing.RATES[name] && Population.ABSOLUTE[name]) {\n                    this.computeConfirmedProjectedBlock(name, dataset.data[name].absolute, globalTestingRate);\n                    this.computeConfirmedProjectedBlock(name, dataset.data[name].ppm, globalTestingRate);\n                }\n            });\n        });\n    };\n\n    computeConfirmedProjectedBlock = (name, block, globalTestingRate) => {\n        let localTestingRate = Testing.RATES[name] / Population.ABSOLUTE[name];\n        let scale = globalTestingRate / localTestingRate;\n        this.calculateConfirmedProjected(scale, block.current);\n        this.calculateConfirmedProjected(scale, block.growthLast1Day);\n        this.calculateConfirmedProjected(scale, block.growthLast3Days);\n        this.calculateConfirmedProjected(scale, block.growthLast7Days);\n    };\n\n    calculateConfirmedProjected = (scale, value) => {\n        value[\"confirmedProjected\"] = value[\"confirmed\"] * scale;\n    };\n\n    computeActive = (ds) => {\n        ds.datasets.map((dataset, datasetIndex) => {\n            Object.values(dataset.data).map((locationData, locationIndex) => {\n                this.computeActiveBlock(locationData.absolute);\n                this.computeActiveBlock(locationData.ppm);\n            });\n        });\n    };\n\n    computeActiveBlock = (block) => {\n        this.calculateActive(block.current);\n        this.calculateActive(block.growthLast1Day);\n        this.calculateActive(block.growthLast3Days);\n        this.calculateActive(block.growthLast7Days);\n    };\n\n    calculateActive = (value) => {\n        value[\"active\"] = value[\"confirmed\"] - value[\"recovered\"] - value[\"deceased\"];\n    };\n\n    parseTable = (ds, attribute, table, parseHeader, parseRowUS=false, seriesOffset=0) => {\n        let header = true;\n        for(let data of table) {\n            if(header) {\n                if(parseHeader) {\n                    this.parseHeader(ds, data);\n                }\n                header = false;\n            }\n            else {\n                if(parseRowUS) {\n                    this.parseRowUS(ds, attribute, data, seriesOffset);\n                } else {\n                    this.parseRow(ds, attribute, data);\n                }\n            }\n        }\n    };\n\n    parseRowUS = (ds, attribute, row, seriesOffset=0) => {\n        let name = row[10];\n        if(this.BLACKLIST_NAMES.includes(name)) {\n            return;\n        }\n        ds.locations[name] = [row[9], row[8]];\n        for(let i = 11 + seriesOffset; i < row.length; i++) {\n            let data = ds.datasets[i - 11 - seriesOffset].data;\n            if(!data[name]) {\n                data[name] = new Data();\n            }\n            let locationData = data[name];\n            this.parseBlock(name, row, i, attribute, locationData);\n        }\n    };\n\n    parseHeader = (ds, header) => {\n        for(let i = 4; i < header.length; i++) {\n            ds.datasets.push(new Dataset(header[i]));\n        }\n    };\n\n    parseRow = (ds, attribute, row) => {\n        let name = \"\";\n            if(row[0]) {\n                name += row[0] + \", \";\n            }\n            if(row[1]) {\n                name += row[1];\n            }\n        if(this.BLACKLIST_NAMES.includes(name)) {\n            return;\n        }\n        ds.locations[name] = [row[3], row[2]];\n        for(let i = 4; i < row.length; i++) {\n            let data = ds.datasets[i - 4].data;\n            if(!data[name]) {\n                data[name] = new Data();\n            }\n            let locationData = data[name];\n            this.parseBlock(name, row, i, attribute, locationData);\n        }\n    };\n\n    parseBlock = (name, row, i, attribute, locationData) => {\n        // absolute current\n        let value = Number(row[i]);\n        locationData.absolute.current[attribute] = value;\n        locationData.ppm.current[attribute] = this.ppm(name, value);\n\n        // absolute growth last 1 day\n        if(i >= 5) {\n            locationData.absolute.growthLast1Day[attribute] = value - Number(row[i - 1]);\n            locationData.ppm.growthLast1Day[attribute] = this.ppm(name, value - Number(row[i - 1]));\n        } else {\n            locationData.absolute.growthLast1Day[attribute] = 0;\n            locationData.ppm.growthLast1Day[attribute] = 0;\n        }\n\n        // absolute growth last 3 days\n        if(i >= 7) {\n            locationData.absolute.growthLast3Days[attribute] = value - Number(row[i - 3]);\n            locationData.ppm.growthLast3Days[attribute] = this.ppm(name, value - Number(row[i - 3]));\n        } else {\n            locationData.absolute.growthLast3Days[attribute] = 0;\n            locationData.ppm.growthLast3Days[attribute] = 0;\n        }\n\n        // absolute growth last 7 days\n        if(i >= 11) {\n            locationData.absolute.growthLast7Days[attribute] = value - Number(row[i - 7]);\n            locationData.ppm.growthLast7Days[attribute] = this.ppm(name, value - Number(row[i - 7]));\n        } else {\n            locationData.absolute.growthLast7Days[attribute] = 0;\n            locationData.ppm.growthLast7Days[attribute] = 0;\n        }\n    };\n\n    ppm = (name, value) => {\n        if(!Population.ABSOLUTE[name]) {\n            console.log(\"No population data for: \" + name);\n            return 0;\n        }\n        return 1000000 * value / Population.ABSOLUTE[name];\n    };\n\n    loadFromUrl = (url, callback) => {\n        Papa.parse(url, {\n            download: true,\n            complete: async function (results) {\n                callback(results);\n            }\n        });\n    };\n}\n\n\n\n  // get_sums(NAME, extension) {\n\t//   let that = this;\n\t// \t\t  let population_sum = 0;\n\t// \t\t  let confirmed_sum = 0;\n\t// \t\t  let projected_sum = 0;\n\t// \t\t  let active_sum = 0;\n\t// \t\t  let recovered_sum = 0;\n\t// \t\t  let deaths_sum = 0;\n\t// \t          for(let c of that.confirmed) {\n  //                   if (c.name.endsWith(extension)) {\n  //                     if (!isNaN(Population.ABSOLUTE[c.name])) {\n  //                       population_sum += Population.ABSOLUTE[c.name];\n  //                       confirmed_sum += that.confirmed[c.rowId].val;\n  //                       projected_sum += that.projected[c.rowId].val;\n  //                       active_sum += that.confirmed[c.rowId].val - that.recoveredAbsByRowId[c.rowId] - that.deathsAbsByRowId[c.rowId];\n  //                       recovered_sum += that.recovered[c.rowId].val;\n  //                       deaths_sum += that.deaths[c.rowId].val;\n  //                     }\n  //                   }\n  //                 }\n\t//   return [population_sum, confirmed_sum, projected_sum, active_sum, recovered_sum, deaths_sum];\n  // }\n","\nexport default class Utils {\n\n    static rounded = num => {\n        if(isNaN(num)) {\n            return \"-\";\n        }\n        if (num > 1000000000) {\n            return Math.round(num / 100000000) / 10 + \"Bn\";\n        } else if (num > 1000000) {\n            return Math.round(num / 100000) / 10 + \"M\";\n        } else if (num > 1000) {\n            return Math.round(num / 100) / 10 + \"K\";\n        } else {\n            return Math.round(num);\n        }\n    };\n}\n","import React from \"react\";\n\nexport default class RaceChart extends React.Component {\n  render() {\n    let svgWidth = 200;\n    let svgHeight = 145;\n    if(this.props.expanded) {\n      svgWidth = window.innerWidth - 40;\n      svgHeight = Math.round(window.innerHeight - 160);\n    }\n    let datasource = this.props.datasource;\n    let logmode = this.props.logmode;\n    let dayOffset = this.props.dayOffset;\n    let barWidth = svgWidth / (datasource.datasets.length);\n    return (\n      <svg width={svgWidth} height={svgHeight} role=\"img\">\n        {\n          this.props.names.sort((a, b) => {\n              let val_a = datasource.datasets[datasource.datasets.length - 1].data[a].absolute.current.confirmed;\n              let val_b = datasource.datasets[datasource.datasets.length - 1].data[b].absolute.current.confirmed;\n              if(val_a > val_b) {\n                return -1;\n              } else if(val_a < val_b) {\n                return 1;\n              }\n              return 0;\n            }).map((name, index) => {\n            let max = datasource.absoluteMaxValue;\n            let points = \"\";\n            Object.values(datasource.datasets).map((dataset, dateIndex) => {\n              let value = dataset.data[name].absolute.current.confirmed;\n              if(value > 0) {\n                if (logmode) {\n                  value = Math.round((Math.log(value) / Math.log(max)) * svgHeight);\n                } else {\n                  value = Math.round((value / max) * svgHeight);\n                }\n              }\n              points += dateIndex * barWidth + \",\" + (svgHeight - value) + \" \";\n              return true;\n            });\n            return (\n              <g>\n                <polyline className={\"line line\"+index}\n                  points={points}\n                ></polyline>\n                <text\n                  className={\"legend legend\"+index}\n                  x={0}\n                  y={10 * (index + 1)}\n                >\n                  {name}\n                </text>\n              </g>\n            );\n          })\n        }\n        <g className=\"todayMarkerLineChart\">\n          <rect\n              x={(datasource.datasets.length - 1 + dayOffset) * barWidth}\n              y={0}\n              width={barWidth}\n              height={svgHeight}></rect>\n        </g>\n      </svg>\n    );\n  }\n}\n","import React, {memo} from \"react\";\nimport { Map, TileLayer, Tooltip as LTooltip,\n    Polygon, CircleMarker, Rectangle, LayerGroup } from \"react-leaflet\";\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faWindowMinimize,\n  faUsers,\n  faProcedures,\n  faHeartbeat,\n  faHeartBroken,\n  faBiohazard,\n  faStopCircle,\n  faPauseCircle,\n  faQuestion,\n  faQuestionCircle, \n  faBug, \n  faBalanceScale, \n  faVial,\n  faStepBackward,\n  faStepForward,\n  faShieldAlt,\n  faExclamationTriangle,\n  faShieldVirus,\n  faWindowMaximize,\n  faWindowRestore\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {faPlayCircle} from '@fortawesome/free-regular-svg-icons';\n\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\n\nimport BarChart from \"./BarChart\";\nimport {JHDatasourceProvider} from \"./datasource/JHDatasourceProvider\";\nimport * as Population from \"./Population\";\nimport * as Testing from \"./TestingRates\";\nimport Utils from \"./Utils\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport RaceChart from \"./RaceChart\";\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n  },\n}))(Tooltip);\n\nconst ONE_M=1000000;\n\nclass MapChart extends Map {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      setTotalConfirmed: props.setTotalConfirmed,\n      setTotalRecovered: props.setTotalRecovered,\n      setTotalDeceased: props.setTotalDeceased,\n      setTotalConfirmedProjected: props.setTotalConfirmedProjected,\n      factor: 50,\n      logmode: true,\n      momentum: \"none\",\n      ppmmode: false,\n      minimized_controls: window.innerWidth < 500,\n      minimized_timeline: window.innerWidth < 500,\n      testmode: true,\n      testscale: 0,\n      dayOffset: 0,\n      playmode: false,\n      mapstyle: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\",\n      selectedData: [\"projected\", \"confirmed\", \"recovered\", \"deceased\"],\n      datasource: null,\n      leadership: \"active\",\n      selectedLocations: [\"Hubei, China\", \"Italy\", \"US\", \"Spain\", \"Germany\", \"France\", \"Iran\", \"United Kingdom\", \"Switzerland\", \"Austria\"],\n      showUScounties: false,\n      showModal: true,\n\n      expandRaceChart: false,\n\n      lat: 50,\n      lng: 10,\n      zoom: 4,\n\n      glyphs: \"mountains\"\n    };\n\n    this.map = null;\n\n    let that = this;\n    new JHDatasourceProvider().getDatasource(false,  (datasource) => {\n      that.state.datasource = datasource;\n      that.setState({});\n    });\n  }\n\n  componentDidMount = () => {\n      this.render();\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if(this.state.datasource) {\n      this.updateLeafletElement(prevProps, this.props);\n      const layers = this.map.leafletElement._layers;\n\n      // bring to front one by one\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"projected\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"confirmed\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"recovered\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"deceased\") {\n          layer.bringToFront();\n        }\n      });\n    }\n  };\n\n  render() {\n    if(!this.state.datasource) {\n      return (<LinearProgress />);\n    }\n    else {\n      let that = this;\n      let ds = this.state.datasource.datasets[Math.max(0, this.state.datasource.datasets.length - 1 + this.state.dayOffset)];\n      that.state.setTotalConfirmed(ds.totalConfirmed);\n      that.state.setTotalRecovered(ds.totalRecovered);\n      that.state.setTotalDeceased(ds.totalDeceased);\n      that.state.setTotalConfirmedProjected(ds.totalConfirmedProjected * that.state.testscale);\n      return (\n          <>\n            <Modal show={this.state.showModal} onHide={()=>{this.setState({showModal: false})}}>\n                <Modal.Header className={\"bg-light\"} closeButton>\n                  <Modal.Title><FontAwesomeIcon icon={faShieldVirus}/> Good to see you!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className={\"text-justify\"}>\n                    <p><i>covid19map.io</i> is a free <a target=\"_blank\" href=\"https://github.com/daniel-karl/covid19-map/#open-covid19-map-%EF%B8%8F\">open source</a> project.</p>\n                    <p>We provide a more detailed view on <a target=\"_blank\" href=\"https://github.com/CSSEGISandData/COVID-19\">Johns Hopkins University CSSE COVID-19 data repository</a>.</p>\n\n                    <h3>Tutorial</h3>\n                    <p>\n                        <h5>Glyphs</h5>\n                        We show cases of COVID-19 as glyphs on the map:<br />\n                        <table cellPadding={3} className={\"w-100\"}>\n                            <tr>\n                                <td align={\"center\"}><img src={\"glyphs.png\"} height={\"50px\"}/></td>\n                                <td align={\"center\"}><img src={\"glyphs2.png\"} height={\"50px\"}/></td>\n                                <td align={\"center\"}><img src={\"glyphs3.png\"} height={\"50px\"}/></td>\n                            </tr>\n                            <tr>\n                                <td align={\"center\"} className={\"small text-secondary\"}>Mountains</td>\n                                <td align={\"center\"} className={\"small text-secondary\"}>Bubbles</td>\n                                <td align={\"center\"} className={\"small text-secondary\"}>Candles</td>\n                            </tr>\n                        </table>\n                        <span className=\"small text-danger\">Red: Confirmed cases</span><br />\n                        <span className=\"small text-success\">Green: Recovered cases</span><br/>\n                        <span className=\"small text-dark\">Black: Deceased cases</span><br/>\n                    </p>\n                    <p>\n                        <h5>Modes</h5>\n                        <b>Cumulative mode:</b> Glyphs show absolute numbers including live updates during the day.<br/>\n                        <br/>\n                        <b>Momentum mode:</b> Glyphs show growth (red) and shrinking (green) of active cases since last 1, 3 or 7 day(s).\n                    </p>\n                    <p>\n                        <h5>Normalization</h5>\n                        <b>Log:</b> Toggle between logarithmic and linear normalization of the data. Linear normalization preserves the absolute\n                        differences in the data, whereas logarithmic scaling allows for comparison on the order of magnitude, i.e. the <i>length</i> of values.<br />\n                        <br />\n                        <b>Population:</b> Toggle whether to scale the data according to the number of people in a location.<br />\n                        This also changes all numbers displayed in the application to parts per million (<b>PPM</b>).\n                    </p>\n                    <p>\n                        <h5>\"What if?\"-testing rates</h5>\n                        Display how many confirmed cases there might be if the local testing rate in a location was coinciding with the global average.\n                        We represent this number of <i>projected</i> confirmed cases as blue halos behind the known confirmed number (red).\n                        <table cellPadding={3} className={\"w-100\"}>\n                            <tr>\n                                <td align={\"center\"}><img src={\"glyphs5.png\"} height={\"50px\"}/></td>\n                                <td align={\"center\"}><img src={\"glyphs4.png\"} height={\"50px\"}/></td>\n                                <td align={\"center\"}><img src={\"glyphs6.png\"} height={\"50px\"}/></td>\n                            </tr>\n                            <tr>\n                                <td align={\"center\"} className={\"small text-secondary\"}>Mountains</td>\n                                <td align={\"center\"} className={\"small text-secondary\"}>Bubbles</td>\n                                <td align={\"center\"} className={\"small text-secondary\"}>Candles</td>\n                            </tr>\n                            <tr>\n                                <td align={\"center\"} colSpan={3} className={\"small\"}>\n                                    Projected confirmed numbers shown as blue halos.\n                                </td>\n                            </tr>\n                        </table>\n                    </p>\n                    <p>\n                        <h5>Replay mode</h5>\n                        <table cellPadding={3}>\n                            <tr>\n                                <td valign={\"top\"}>\n                                    Navigate back and forth in time to explore the history of COVID-19. You can also\n                                    hit the green <span className=\"text-success\">Play</span> button to start the interactive animation.\n                                </td>\n                                <td>\n                                    <img src={\"theatre.png\"} />\n                                </td>\n                            </tr>\n                        </table>\n                    </p>\n                    <p>\n                        <h5>Containment Scores</h5>\n                        <table>\n                            <tr>\n                                <td colSpan={12}>\n                                    Based on weighted average growth of confirmed cases over the past 1, 3 and 7 days we compute\n                                    Containment Scores that reflect the spread of COVID19 in different locations.<br />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colSpan={12}>&nbsp;</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore0\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      0/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore1\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      1/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore2\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      2/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore3\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      3/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore4\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      4/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore5\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      5/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore6\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      6/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore7\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      7/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore8\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      8/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore9\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      9/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore stayAtHomeScore10\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      10/10\n                                    </div>\n                                </td>\n                                <td>\n                                    <div className={\"stayAtHomeScore\"} style={{float: \"left\", fontSize: \"10px\"}}>\n                                      N/A\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 100%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 50%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 20%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 10%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 5%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 2%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 1%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 0.5%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 0.2%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 0.1%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    &gt; 0%\n                                </td>\n                                <td className={\"small text-muted\"} style={{fontSize: \"10px\"}}>\n                                    -\n                                </td>\n                            </tr>\n                            <tr>\n                                <td align={\"center\"} colSpan={12} className={\"small\"}>\n                                    Containment Scores badges with growth rate thresholds\n                                </td>\n                            </tr>\n                        </table>\n                    </p>\n                    <p>\n                        <h5>Charts</h5>\n                        <table cellPadding={3}>\n                            <tr>\n                                <td valign={\"top\"}>\n                                    For every location we generate a bar chart that shows the progress of COVID-19 cases over time.\n                                    The gray bar indicates the currently selected date of the replay mode (see above).\n                                </td>\n                                <td>\n                                    <img src={\"chart.png\"} width={\"200px\"}/>\n                                </td>\n                            </tr>\n                        </table>\n                    </p>\n                    <p>If you experience any issues or have suggestions on how to improve this application <a target=\"_blank\" href=\"https://github.com/daniel-karl/covid19-map/issues\">please let us know</a>.</p>\n                    Stay healthy,<br />\n                    <a target=\"_blank\" href=\"https://github.com/daniel-karl/covid19-map#contributors\">The contributors</a>\n                </Modal.Body>\n                <Modal.Footer className={\"bg-light\"}>\n                  <Button variant=\"dark\" onClick={()=>{this.setState({showModal: false})}}>\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            <div className={\"small controls\" + (that.state.minimized_controls ? \" minimized\" : \"\")}>\n              {/*\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"none\" } label=\"Live situation\" type={\"radio\"} name={\"a\"} id={`inline-radio-4`} onClick={() => {that.setState({momentum: \"none\"});}} />\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last1\" } label=\"Momentum last 1 day\" type={\"radio\"} name={\"b\"} id={`inline-radio-5`} onClick={() => {that.setState({momentum: \"last1\", chart: \"pie\"});}} />\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last3\" } label=\"Momentum last 3 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-6`} onClick={() => {that.setState({momentum: \"last3\", chart: \"pie\"});}} />\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last7\" } label=\"Momentum last 7 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-7`} onClick={() => {that.setState({momentum: \"last7\", chart: \"pie\"});}} />\n              */}\n              <button hidden={that.state.minimized_controls} className={\"btn-collapse\"} onClick={() => {\n                that.setState({minimized_controls: true})\n              }}>minimize <FontAwesomeIcon icon={faWindowMinimize}/></button>\n              <button hidden={!that.state.minimized_controls} className={\"btn-collapse\"} onClick={() => {\n                that.setState({minimized_controls: false})\n              }}>settings\n              </button>\n              <div hidden={that.state.minimized_controls}>\n                <span className=\"small text-muted mr-2\">Mode:</span>\n                <Tooltip\n                    title={<span><b>Cumulative mode:</b> Glyphs show absolute numbers including live updates during the day.<br/><br/><b>Momentum mode:</b> Glyphs show growth (red) and shrinking (green) of active cases since last 1, 3 or 7 day(s).</span>}\n                    small={\"true\"}\n                    arrow\n                    disableTouchListener={true}\n                >\n                  <span className=\"test\"><FontAwesomeIcon icon={faQuestion} size={\"xs\"}/></span>\n                </Tooltip><br />\n                <FormControl className={\"mb-2\"}>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={that.state.momentum}\n                    onChange={(e) => {\n                        that.setState({momentum: e.target.value, testmode: false, testscale: 0});\n                    }}\n                  >\n                    <MenuItem value={\"none\"}>Cumulative</MenuItem>\n                    <MenuItem value={\"last1\"}>Momentum (last 24 hours)</MenuItem>\n                    <MenuItem value={\"last3\"}>Momentum (last 3 days)</MenuItem>\n                    <MenuItem value={\"last7\"}>Momentum (last 7 days)</MenuItem>\n                  </Select>\n                </FormControl>\n                {/*<FormControlLabel\n                  control={\n                      <Checkbox\n                          color=\"primary\"\n                          checked={this.state.showUScounties}\n                          onChange={() => {\n                              new JHDatasourceProvider().getDatasource(!that.state.showUScounties, (datasource) => {\n                                  that.setState({\n                                      showUScounties: !that.state.showUScounties,\n                                      datasource: datasource\n                                  });\n                              });\n                          }}\n                      />\n                  }\n                  label={\n                      <Tooltip\n                      title=\"Show live US county data (slows perfomance of the application).\"\n                      small={\"true\"}\n                      arrow\n                      disableTouchListener={true}\n                    >\n                      <span>Include US counties<br />(reduces speed)</span>\n                    </Tooltip>\n                  }\n                />*/}\n                <br />\n                <span className=\"small text-muted mr-2\">Normalization:</span>\n                <Tooltip\n                    title=\"Scale the size of the glyphs on the map according to different criteria.\"\n                    small={\"true\"}\n                    arrow\n                    disableTouchListener={true}\n                >\n                  <span className=\"test\"><FontAwesomeIcon icon={faQuestion} size={\"xs\"}/></span>\n                </Tooltip>\n                <br/>\n                <FormControlLabel\n                  className={\"higher\"}\n                  control={\n                      <Checkbox\n                          color=\"primary\"\n                          checked={that.state.logmode}\n                          onChange={() => {\n                              that.setState({\n                                  logmode: !that.state.logmode\n                              });\n                          }}\n                      />\n                  }\n                  label={\n                      <Tooltip\n                      title=\"Scales the size of the glyphs on the map logarithmically.\"\n                      small={\"true\"}\n                      arrow\n                      disableTouchListener={true}\n                    >\n                      <span>Log</span>\n                    </Tooltip>\n                  }\n                />\n                <FormControlLabel\n                  className={\"higher\"}\n                  control={\n                      <Checkbox\n                          color=\"primary\"\n                          checked={that.state.ppmmode}\n                          onChange={() => {\n                              that.setState({\n                                  ppmmode: !that.state.ppmmode\n                              });\n                          }}\n                      />\n                  }\n                  label={\n                      <Tooltip\n                      title=\"Scales the size of the glyphs on the map according to the number of people in the location.\"\n                      small={\"true\"}\n                      arrow\n                      disableTouchListener={true}\n                    >\n                      <span>Population</span>\n                    </Tooltip>\n                  }\n                />\n                <br/>\n                {\n                  that.state.momentum === \"none\" && !that.state.playmode &&\n                  [\n                    <span className=\"small text-muted mr-2\">'What if?'-testing rates:</span>,\n                    <Tooltip\n                        title=\"Display how many confirmed cases there might be if local testing rate was coinciding with global average.\"\n                        small={\"true\"}\n                        arrow\n                        disableTouchListener={true}\n                    >\n                      <span className={\"test\"}><FontAwesomeIcon icon={faQuestion} size={\"xs\"}/></span>\n                    </Tooltip>,\n                    <br/>,\n                    <Slider\n                      value={this.state.testscale}\n                      defaultValue={this.state.testscale}\n                      step={0.1}\n                      min={0}\n                      max={3}\n                      marks={[\n                          {value: 0, label: <span className={\"text-muted small\"}>off</span>},\n                          {value: 1, label: <span className={\"text-muted small\"}>global average</span>}\n                          ]}\n                      onChange={(e,value) => {\n                          this.state.logmode = false;\n                          this.state.testscale = value;\n                          this.state.testmode = true;\n                          this.render();\n                      }}\n                    />,\n                    <br/>\n                  ]\n                }\n                <span className=\"small text-muted\">Glyphs:</span><br/>\n                <Form.Check inline className=\"small hideInJh\" checked={that.state.glyphs===\"mountains\" } label=\"Mountains\" type={\"radio\"} name={\"a\"} id={`inline-radio-glyphs-mountains`} onClick={() => {that.setState({glyphs: \"mountains\"});}} />\n                <Form.Check inline className=\"small hideInJh\" checked={that.state.glyphs===\"candles\" } label=\"Candles\" type={\"radio\"} name={\"a\"} id={`inline-radio-glyphs-candles`} onClick={() => {that.setState({glyphs: \"candles\"});}} />\n                <Form.Check inline className=\"small hideInJh\" checked={that.state.glyphs===\"bubbles\" } label=\"Bubbles\" type={\"radio\"} name={\"a\"} id={`inline-radio-glyphs-bubbles`} onClick={() => {that.setState({glyphs: \"bubbles\"});}} /><br />\n\n                <span className=\"small text-muted mr-2\">Glyph size:</span><br/>\n                <Slider\n                    value={this.state.factor}\n                    defaultValue={this.state.factor}\n                    step={1}\n                    min={1}\n                    max={100}\n                    valueLabelDisplay=\"auto\"\n                    onChange={(e,value) => {\n                        this.setState({factor: value});\n                    }}\n                /><br />\n                  {/*<ReactBootstrapSlider value={this.state.factor} change={e => {\n                  this.setState({factor: e.target.value});\n                }} step={1} max={100} min={1}></ReactBootstrapSlider><br/>*/}\n                {/*<Form.Check inline title=\"Represent data as bubbles. Hover bubbles on map to see more details.\" className=\"small\" checked={that.state.chart===\"pie\" } label=\"Bubbles\" type={\"radio\"} name={\"a\"} id={`inline-radio-1`} onChange={() => {that.setState({chart: \"pie\"});}}/><br />*/}\n                {/*<Form.Check inline title=\"Represent data as vertical bars. Hover bars on map to see more details.\" className=\"small hideInMomentum\" checked={that.state.chart===\"bar\" } label=\"Bars\" type={\"radio\"} name={\"a\"} id={`inline-radio-2`} onChange={() => {that.setState({chart: \"bar\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/>*/}\n                {/*<Form.Check inline title=\"Represent data as horizontal pill. Hover pill on map to see more details.\" className=\"small hideInMomentum\" checked={that.state.chart===\"pill\" } label=\"Pills\" type={\"radio\"} name={\"a\"} id={`inline-radio-3`} onChange={() => {that.setState({chart: \"pill\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/><br />*/}\n                <span className=\"small text-muted\">Map style:</span><br/>\n                <FormControl>\n                  <Select\n                    labelId=\"map-style-select-label\"\n                    id=\"map-style-select\"\n                    value={that.state.mapstyle}\n                    onChange={(e) => {\n                        that.setState({mapstyle: e.target.value});\n                    }}\n                  >\n                    <MenuItem value=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\">Light</MenuItem>\n                    <MenuItem value=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\">Color</MenuItem>\n                    <MenuItem value=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\">Dark</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <div className={\"credits\"}>\n                  <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\"\n                            href={\"https://github.com/daniel-karl/covid19-map/issues\"}><FontAwesomeIcon\n                      icon={faBug}/> Issues</a></Badge>\n                  <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\"\n                            href={\"https://github.com/daniel-karl/covid19-map#about\"}><FontAwesomeIcon\n                      icon={faQuestionCircle}/> About</a></Badge>\n                  <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\"\n                            href={\"https://github.com/daniel-karl/covid19-map/blob/master/LICENSE.txt\"}><FontAwesomeIcon\n                      icon={faBalanceScale}/> License</a></Badge>\n                </div>\n              </div>\n            </div>\n            <div className={\"small timeline\" + (that.state.minimized_timeline ? \" minimized\" : \"\") + (this.state.expandRaceChart ? \" expanded\" : \"\")}>\n              <button\n                  hidden={that.state.minimized_timeline}\n                  className={\"btn-collapse\"}\n                  onClick={() => {\n                    that.setState({minimized_timeline: true, expandRaceChart: false})\n                  }}\n              >\n                  minimize <FontAwesomeIcon icon={faWindowMinimize}/>\n              </button>\n\n              <button\n                  hidden={that.state.minimized_timeline || that.state.expandRaceChart}\n                  className={\"btn-collapse expand\"}\n                  onClick={() => {\n                    that.setState({expandRaceChart: true})\n                  }}\n              >\n                  expand <FontAwesomeIcon icon={faWindowMaximize}/>\n              </button>\n\n              <button\n                  hidden={that.state.minimized_timeline || !that.state.expandRaceChart}\n                  className={\"btn-collapse expand\"}\n                  onClick={() => {\n                      that.setState({expandRaceChart: false})\n                  }}\n              >\n                  restore <FontAwesomeIcon icon={faWindowRestore}/>\n              </button>\n\n              <button\n                  hidden={!that.state.minimized_timeline}\n                  className={\"btn-collapse\"}\n                  onClick={() => {\n                      that.setState({minimized_timeline: false})\n                  }}\n              >\n                  timeline\n              </button>\n              <div hidden={that.state.minimized_timeline}>\n                  <button disabled style={{opacity: 1, pointerEvents: \"none\"}} className={\"btn btn-sm text-dark ml-0 pl-0\"}>\n                    <b>{new Date(ds.date).toLocaleDateString()}</b>\n                  </button>\n                  <div className=\"totals\">\n                    {\n                        this.props.totalConfirmedProjected * this.state.testscale > this.props.totalConfirmed &&\n                        <span className={\"text-primary mr-2\"} style={{fontSize: \"27px\", fontStyle: \"italic\", fontWeight: \"bold\"}}>\n                            <FontAwesomeIcon icon={faBiohazard} className={\"mr-1\"}/>\n                            {Utils.rounded(this.props.totalConfirmedProjected)}\n                        </span>\n                    }\n                    {\n                        this.props.totalConfirmedProjected * this.state.testscale <= this.props.totalConfirmed &&\n                        <span className={\"small text-danger mr-2\"} style={{fontSize: \"27px\", fontStyle: \"italic\", fontWeight: \"bold\"}}>\n                            <FontAwesomeIcon icon={faBiohazard} className={\"mr-1\"}/>\n                            {Utils.rounded(this.props.totalConfirmed)}\n                        </span>\n                    }\n                    <br />\n                    <span className={\"small text-success mr-2\"} style={{fontSize: \"27px\", fontStyle: \"italic\", fontWeight: \"bold\"}}>\n                        <FontAwesomeIcon icon={faHeartbeat} className={\"mr-1\"}/>\n                        {Utils.rounded(this.props.totalRecovered)}\n                    </span>\n                    <br />\n                    <span className={\"small mr-2\"} style={{fontSize: \"27px\", fontStyle: \"italic\", fontWeight: \"bold\"}}>\n                        <FontAwesomeIcon icon={faHeartBroken} className={\"mr-1\"}/>\n                        {Utils.rounded(this.props.totalDeceased)}\n                    </span>\n                  </div>\n                  <div className={\"race mb-1\"}>\n                    <RaceChart\n                      datasource={this.state.datasource}\n                      dayOffset={this.state.dayOffset}\n                      logmode={this.state.logmode}\n                      names={this.state.selectedLocations}\n                      expanded={this.state.expandRaceChart}\n                    />\n                  </div>\n                  <button\n                      className={this.state.dayOffset < 0 ? \"btn btn-sm btn-dark leftTime\" : \"btn btn-sm btn-outline-dark leftTime\"}\n                      style={{height: \"30px\", lineHeight: \"20px\"}}\n                      onClick={() => {\n                          this.setState({\n                             dayOffset: this.state.dayOffset - 1,\n                             testmode: false\n                          });\n                      }}\n                  ><FontAwesomeIcon icon={faStepBackward}/></button>\n\n                  <button\n                      className={\"btn btn-sm btn-secondary midTime\"}\n                      style={this.state.dayOffset < 0 && !this.state.playmode ? {\n                        height: \"30px\",\n                        lineHeight: \"20px\"\n                      } : {display: \"none\"}}\n                      onClick={() => {\n                        this.state.dayOffset = Math.min(0, this.state.dayOffset + 1);\n                        if (this.state.dayOffset === 0) {\n                          this.state.playmode = false;\n                        } else {\n                          this.state.testmode = false;\n                        }\n                        this.render();\n                      }}\n                  ><FontAwesomeIcon icon={faStepForward}/></button>\n\n                  <button\n                      className={this.state.dayOffset < 0 ? \"btn btn-sm btn-outline-danger todayTime\" : \"btn btn-sm btn-danger todayTime\"}\n                      style={{height: \"30px\", lineHeight: \"20px\"}}\n                      onClick={() => {\n                        this.setState({\n                          dayOffset: 0\n                        });\n                      }}\n                  >Latest</button>\n\n                  <button\n                      className={\"btn btn-sm btn-success play\"}\n                      style={{height: \"30px\", lineHeight: \"20px\"}}\n                      onClick={() => {\n                        document.getElementsByClassName(\"todayTime\")[0].style.display = \"none\";\n                        document.getElementsByClassName(\"play\")[0].style.display = \"none\";\n                        document.getElementsByClassName(\"leftTime\")[0].style.display = \"none\";\n                        document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n\n                        var now = new Date();\n                        var startDate = new Date(\"January 22, 2020 00:00:00\");\n                        const oneDay = 24 * 60 * 60 * 1000;\n                        this.setState({\n                          dayOffset:  -Math.round(Math.abs((now - startDate) / oneDay)),\n                          testmode: false,\n                          testscale: 0,\n                          playmode: true,\n                          playpause: false\n                        });\n                        let interval = setInterval(() => {\n                          if (!that.state.playmode) {\n                            clearInterval(interval);\n                            this.setState({\n                                dayOffset: 0\n                            });\n                            return;\n                          }\n                          if (!this.state.playpause) {\n                            this.setState({\n                                dayOffset: this.state.dayOffset + 1\n                            });\n                            if (this.state.dayOffset === 0) {\n                              document.getElementsByClassName(\"todayTime\")[0].style.display = \"inline\";\n                              document.getElementsByClassName(\"play\")[0].style.display = \"inline\";\n                              document.getElementsByClassName(\"leftTime\")[0].style.display = \"inline\";\n                              document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n                              this.setState({\n                                 playmode: false,\n                                 testscale: 0,\n                                 testmode: false\n                              });\n                            }\n                          }\n                        }, 500);\n                      }}\n                  ><FontAwesomeIcon icon={faPlayCircle}/></button>\n\n                  <button\n                      className={\"btn btn-sm pause \" + (this.state.playpause ? \"btn-success\" : \"btn-outline-dark\")}\n                      style={this.state.playmode ? {height: \"30px\", lineHeight: \"20px\"} : {display: \"none\"}}\n                      onClick={() => {\n                          this.setState({\n                              playpause: !this.state.playpause\n                          });\n                      }}\n                  >\n                    {\n                      !this.state.playpause &&\n                      [<FontAwesomeIcon icon={faPauseCircle}/>, \" Pause\"]\n                    }\n                    {\n                      this.state.playpause &&\n                      [<FontAwesomeIcon icon={faPlayCircle}/>, \" Continue\"]\n                    }\n                  </button>\n\n                  <button\n                      className={\"btn btn-sm btn-danger stop\"}\n                      style={this.state.playmode ? {height: \"30px\", lineHeight: \"20px\"} : {display: \"none\"}}\n                      onClick={() => {\n                        document.getElementsByClassName(\"todayTime\")[0].style.display = \"inline\";\n                        document.getElementsByClassName(\"play\")[0].style.display = \"inline\";\n                        document.getElementsByClassName(\"leftTime\")[0].style.display = \"inline\";\n                        document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n                        this.state.playmode = false;\n                        this.state.testscale = 0;\n                        this.render();\n                      }}\n                  ><FontAwesomeIcon icon={faStopCircle}/> Stop\n                  </button>\n              </div>\n            </div>\n            {\n              that.state.momentum !== \"none\" &&\n              <style dangerouslySetInnerHTML={{\n                __html: `\n                  .hideInMomentum {\n                    display: none !important;\n                  }\n                  .showInMomentum {\n                    display: block !important;\n                  }`\n              }}/>\n            }\n            {that.leafletMap(ds)}\n            {that.leaderboard(ds)}\n          </>\n      );\n    }\n  }\n\n  leaderboard = (ds) => {\n    return (\n      <div className=\"leaderboard\">\n        <table>\n          <thead>\n            <tr>\n              <td className={\"p-1 valign-top text-muted\"}></td>\n              <td className={\"p-1 bg-danger text-light sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>active cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"active\"\n                      });\n                    }}><FontAwesomeIcon icon={faProcedures} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 sortHeader\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>location</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"name\"\n                      });\n                    }}\n                  >Location</a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 sortHeader\"} align={\"center\"}>\n              <LightTooltip\n                title={\n                  <div style={{textAlign: \"justify\"}}>\n                    <b>Containment Score</b> reflects the spread of COVID19\n                    in this region, based on weighted average growth\n                    of confirmed cases over the past 1, 3 and 7 days. From worst (0/10) to best (10/10).\n                  </div>\n                }\n                small={\"true\"}\n                disableTouchListener={true}\n              >\n                <a\n                  onClick={() => {\n                    this.setState({\n                      leadership: \"containmentScore\"\n                    });\n                  }}\n                >\n                  <FontAwesomeIcon icon={faShieldAlt} size={\"lg\"}/>\n                </a>\n              </LightTooltip>\n              </td>\n              <td className={\"p-1 text-danger sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>confirmed cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"confirmed\"\n                      });\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faBiohazard} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 text-success sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>recovered cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"recovered\"\n                      });\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faHeartbeat} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 text-dark sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>deceased cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"deceased\"\n                      });\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faHeartBroken} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 text-primary sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>tested</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"tested\"\n                      });\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faVial} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              Object.keys(ds.data).filter((value, index) => {\n                  return this.count(value, \",\") < 2;\n              }).sort((a, b) => {\n                let mode = this.state.ppmmode ? \"ppm\" : \"absolute\";\n                let ca = a;\n                let cb = b;\n                if (this.state.leadership===\"name\") {\n                  let c = a;\n                  ca = b;\n                  cb = c;\n\t\t        }\n                else if (this.state.leadership===\"containmentScore\") {\n                  ca = ds.data[a].containmentScore;\n                  cb = ds.data[b].containmentScore;\n\n\t\t        }\n                else if (this.state.leadership===\"tested\") {\n                  ca = this.state.ppmmode ? Testing.RATES[a]*ONE_M/Population.ABSOLUTE[a] : Testing.RATES[a];\n                  ca = (isNaN(ca)) ? 0 : ca;\n                  cb = this.state.ppmmode ? Testing.RATES[b]*ONE_M/Population.ABSOLUTE[b] : Testing.RATES[b];\n                  cb = (isNaN(cb)) ? 0 : cb;\n                }\n                else {\n                  let dataMode = \"current\";\n                  if(this.state.momentum === \"last1\") {\n                      dataMode = \"growthLast1Day\";\n                  } else if (this.state.momentum === \"last3\") {\n                      dataMode = \"growthLast3Days\";\n                  } else if (this.state.momentum === \"last7\") {\n                      dataMode = \"growthLast7Days\";\n                  }\n                  ca = ds.data[a][mode][dataMode][this.state.leadership];\n                  ca = isNaN(ca) ? 0 : ca;\n                  cb = ds.data[b][mode][dataMode][this.state.leadership];\n                  cb = isNaN(cb)  ? 0 : cb;\n                }\n                if(ca === null && cb === null) {\n                  return 0;\n                } else if(ca === null) {\n                  return 1;\n                } else if(cb === null) {\n                  return -1;\n                } else {\n                  return (ca >= cb) ? -1 : 1;\n                }\n              }).map((name, locationIndex) => {\n                if(name !== \"Canada\") {\n                  let dataMode = \"current\";\n                  if(this.state.momentum === \"last1\") {\n                      dataMode = \"growthLast1Day\";\n                  } else if (this.state.momentum === \"last3\") {\n                      dataMode = \"growthLast3Days\";\n                  } else if (this.state.momentum === \"last7\") {\n                      dataMode = \"growthLast7Days\";\n                  }\n                  let confirmed = (this.state.ppmmode) ? ds.data[name].ppm[dataMode].confirmed : ds.data[name].absolute[dataMode].confirmed;\n                  let active = (this.state.ppmmode) ? ds.data[name].ppm[dataMode].active : ds.data[name].absolute[dataMode].active;\n                  active = isNaN(active) ? \"N/A\" : active;\n                  let recovered = (this.state.ppmmode) ? ds.data[name].ppm[dataMode].recovered : ds.data[name].absolute[dataMode].recovered;\n                  let deceased = (this.state.ppmmode) ? ds.data[name].ppm[dataMode].deceased : ds.data[name].absolute[dataMode].deceased;\n                  let containmentScore = ds.data[name].containmentScore;\n                  if(containmentScore === null) {\n                    containmentScore = \"N/A\";\n                  }\n                  let tested = this.state.ppmmode ? Testing.RATES[name]*ONE_M/Population.ABSOLUTE[name] : Testing.RATES[name];\n                  return (\n                    <tr\n                        className=\"locationSelect\"\n                        onClick={() =>{\n                            if(!this.state.selectedLocations.includes(name)) {\n                                this.state.selectedLocations.pop();\n                                this.state.selectedLocations.push(name);\n                            }\n                            this.setState({\n                                lng: this.state.datasource.locations[name][0],\n                                lat: this.state.datasource.locations[name][1],\n                                zoom: 6\n                            })\n                        }}\n                    >\n                      <td className={\"p-1 valign-top text-muted mono\"} align={\"center\"}>{locationIndex + 1}</td>\n                      <td className={\"p-1 valign-top stat bg-danger text-light\"} align={\"right\"}>{(this.state.momentum !== \"none\" && active >= 0 ? \"+\" : \"\") + Utils.rounded(active)}</td>\n                      <td className={\"p-1 valign-top country\"}>{name}</td>\n                      <td className={\"p-1 valign-top\"}>\n                        <div className={\"containmentScore containmentScore\" + containmentScore}>\n                          {containmentScore}{containmentScore !== \"N/A\" ? \"/10\" : \"\"}\n                        </div>\n                      </td>\n                      <td className={\"p-1 valign-top stat text-danger\"} align={\"right\"}>{(this.state.momentum !== \"none\" && confirmed >= 0 ? \"+\" : \"\") + Utils.rounded(confirmed)}</td>\n                      <td className={\"p-1 valign-top stat text-success\"} align={\"right\"}>{(this.state.momentum !== \"none\" && recovered >= 0 ? \"+\" : \"\") + Utils.rounded(recovered)}</td>\n                      <td className={\"p-1 valign-top stat text-dark\"} align={\"right\"}>{(this.state.momentum !== \"none\" && deceased >= 0 ? \"+\" : \"\") + Utils.rounded(deceased)}</td>\n                      <td className={\"p-1 valign-top stat text-primary\"} align={\"right\"}>{Utils.rounded(tested)}</td>\n                    </tr>\n                  )\n                }\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  handleZoom = () => {\n    this.setState({zoom: this.map.leafletElement.getZoom()});\n  };\n\n  leafletMap = (ds) => {\n    const position = [this.state.lat, this.state.lng];\n    return (\n      <Map ref={(ref) => { this.map = ref}} center={position} zoom={this.state.zoom} zoomControl={false} onZoomEnd={this.handleZoom}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url={this.state.mapstyle}\n        />\n\n        <LayerGroup key={5}>\n          { this.momentumMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={4} className={\"projectedLayer\"}>\n          { this.projectedMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={3} className={\"confirmedLayer\"}>\n          { this.confirmedMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={2} className={\"recoveredLayer\"}>\n          { this.recoveredMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={1} className={\"deceasedLayer\"}>\n          { this.deceasedMarkers(ds) }\n        </LayerGroup>\n      </Map>\n    );\n  };\n\n  momentumMarkers = (ds) => {\n    return (\n      this.state.momentum !== \"none\" &&\n      Object.keys(ds.data).map((name, locationIndex) => {\n        let markers = [];\n        if(ds.data[name].absolute.current.confirmed === -1) {\n            return;\n        }\n        let pop = Population.ABSOLUTE[name];\n        let coordinates = this.state.datasource.locations[name];\n\n        // active cases\n        let size;\n        switch (this.state.momentum) {\n          case \"last1\":\n            size = ds.data[name].absolute.growthLast1Day.active / this.state.datasource.absoluteMaxValue;\n            break;\n          case \"last3\":\n            size = ds.data[name].absolute.growthLast3Days.active / this.state.datasource.absoluteMaxValue;\n            break;\n          case \"last7\":\n            size = ds.data[name].absolute.growthLast7Days.active / this.state.datasource.absoluteMaxValue;\n            break;\n        }\n        if(size !== 0) {\n            let pos = size >= 0;\n            size = Math.abs(size);\n            size = this.scaleLog(size);\n            size = this.scaleLogAndPpm(size);\n            markers.push(\n                <CircleMarker\n                    className={\"confirmed\"}\n                    key={\"change_\" + locationIndex}\n                    style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n                    center={[coordinates[1], coordinates[0]]}\n                    fillColor={pos ? \"#dc3545\" : \"#28a745\"}\n                    radius={isNaN(size) ? 0 : Math.sqrt(size) * this.state.factor}\n                    opacity={0}\n                    fillOpacity={0.5}\n                >\n                    <LTooltip direction=\"bottom\" offset={[0, 20]} opacity={1} className={\"markerTooltip\"}>\n                        {\n                            this.momentumTooltip(name, ds.data[name])\n                        }\n                    </LTooltip>\n                </CircleMarker>\n            );\n        }\n\n\n        // deceased cases\n        switch (this.state.momentum) {\n          case \"last1\":\n            size = ds.data[name].absolute.growthLast1Day.deceased / this.state.datasource.absoluteMaxValue;\n            break;\n          case \"last3\":\n            size = ds.data[name].absolute.growthLast3Days.deceased / this.state.datasource.absoluteMaxValue;\n            break;\n          case \"last7\":\n            size = ds.data[name].absolute.growthLast7Days.deceased / this.state.datasource.absoluteMaxValue;\n            break;\n        }\n        size = Math.abs(size);\n        if(size !== 0) {\n            size = this.scaleLog(size);\n            size = this.scaleLogAndPpm(size);\n            markers.push(\n                <CircleMarker\n                    className={\"deceased\"}\n                    key={\"change_\" + locationIndex}\n                    style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n                    center={[coordinates[1], coordinates[0]]}\n                    fillColor={\"#000000\"}\n                    radius={isNaN(size) ? 0 : Math.sqrt(size) * this.state.factor}\n                    opacity={0}\n                    fillOpacity={0.8}\n                >\n                    <LTooltip direction=\"bottom\" offset={[0, 20]} opacity={1} className={\"markerTooltip\"}>\n                        {\n                            this.momentumTooltip(name, ds.data[name])\n                        }\n                    </LTooltip>\n                </CircleMarker>\n            );\n        }\n        return markers;\n      })\n    );\n  };\n\n  /*<Marker coordinates={coordinates} key={\"change_\" + rowId}>\n              <circle r={isNaN(size)?0:Math.sqrt(size) * this.state.factor} fill={pos ? \"#F008\" : \"#0F08\"} />\n              <title>\n                {`${name} - ${Math.abs(val)} ${pos ? \"INCREASE\" : \"DECREASE\"} in active(= confirmed-recovered) cases (excl. deceased) (${Math.round(ONE_M*val/pop)} ppm)`\n                }\n              </title>\n              <text\n                textAnchor=\"middle\"\n                y={markerOffset}\n                style={{ fontSize: name.endsWith(\", US\") ? \"0.005em\" : \"2px\", fontFamily: \"Arial\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n              >\n                {name}\n              </text>\n            </Marker>*/\n\n  projectedMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.confirmedProjected / that.state.datasource.absoluteMaxValue * that.state.testscale;\n          if(this.state.ppmmode) {\n              value = ds.data[name].ppm.current.confirmedProjected / that.state.datasource.ppmMaxValue * that.state.testscale;\n          }\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#007bff\", size, ds.data[name], name, \"projected\", 0.8, -1);\n        })\n    )\n  };\n\n  confirmedMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.confirmed / that.state.datasource.absoluteMaxValue;\n          if(this.state.ppmmode) {\n              value = ds.data[name].ppm.current.confirmed / that.state.datasource.ppmMaxValue;\n          }\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#dc3545\", size, ds.data[name], name, \"confirmed\", 0.8, -1);\n        })\n    )\n  };\n\n  recoveredMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.recovered / that.state.datasource.absoluteMaxValue;\n          if(this.state.ppmmode) {\n              value = ds.data[name].ppm.current.recovered / that.state.datasource.ppmMaxValue;\n          }\n          if(this.state.glyph !== \"mountains\") {\n              value += ds.data[name].absolute.current.deceased / that.state.datasource.absoluteMaxValue;\n              if(this.state.ppmmode) {\n                  value += ds.data[name].ppm.current.deceased / that.state.datasource.ppmMaxValue;\n              }\n          }\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#28a745\", size, ds.data[name], name, \"recovered\", 0.8, 0);\n        })\n    )\n  };\n\n  deceasedMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.deceased / that.state.datasource.absoluteMaxValue;\n          if(this.state.ppmmode) {\n              value = ds.data[name].ppm.current.deceased / that.state.datasource.ppmMaxValue;\n          }\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#212529\", size, ds.data[name], name, \"deceased\", 0.9, +1);\n        })\n    )\n  };\n\n  marker = (index, coordinates, color, size, data, name, type, opacity, offset) => {\n    let zoom = 1;\n    switch (this.state.zoom) {\n        case 0:\n            zoom = 10;\n            break;\n        case 1:\n            zoom = 7.5;\n            break;\n        case 2:\n            zoom = 5;\n            break;\n        case 3:\n            zoom = 2;\n            break;\n        case 4:\n            zoom = 1.5;\n            break;\n        case 5:\n            zoom = 1;\n            break;\n        case 6:\n            zoom = 0.75;\n            break;\n        case 7:\n            zoom = 0.5;\n            break;\n        case 8:\n            zoom = 0.2;\n            break;\n        case 9:\n            zoom = 0.1;\n            break;\n        case 10:\n            zoom = 0.075;\n            break;\n        case 11:\n            zoom = 0.05;\n            break;\n        case 12:\n            zoom = 0.02;\n            break;\n        case 13:\n            zoom = 0.01;\n            break;\n        case 14:\n            zoom = 0.0075;\n            break;\n        case 15:\n            zoom = 0.005;\n            break;\n        case 16:\n            zoom = 0.002;\n            break;\n        case 17:\n            zoom = 0.001;\n            break;\n        case 18:\n            zoom = 0.00075;\n            break;\n    }\n\n    let diffX = 0.5 * zoom * Math.sqrt(this.state.factor / 200);\n    let diffY = isNaN(size) ? 0 : (size * this.state.factor < 0) ? 0 : size * (this.state.factor / 2);\n    let corner0 = [Number(coordinates[1]), Number(coordinates[0]) - diffX];\n    let corner1 = [Number(coordinates[1]) + diffY * zoom, Number(coordinates[0]) + diffX];\n\n    let latLngs = [\n        [ Number(coordinates[1]), Number(coordinates[0]) - diffX ],\n        [ Number(coordinates[1]) + diffY * zoom, Number(coordinates[0])],\n        [ Number(coordinates[1]), Number(coordinates[0]) + diffX ]\n    ];\n\n    if (this.state.glyphs === \"mountains\") {\n        if(offset < 0) {\n            latLngs[0][1] -= diffX;\n            latLngs[1][1] -= diffX;\n            latLngs[2][1] -= diffX;\n        } else if (offset > 0) {\n            latLngs[0][1] += diffX;\n            latLngs[1][1] += diffX;\n            latLngs[2][1] += diffX;\n        }\n    }\n\n    if(size > 0 && name !== \"Canada\") {\n        if (this.state.glyphs === \"bubbles\") {\n            return (\n                // bubble\n                <CircleMarker\n                    className={type}\n                    key={type + \"_\" + index}\n                    center={[coordinates[1], coordinates[0]]}\n                    fillColor={color}\n                    radius={size && size > 0 ? Math.sqrt(size) * this.state.factor : 0}\n                    opacity={0}\n                    fillOpacity={opacity}\n                    onClick={() => {\n                        this.state.selectedLocations.pop();\n                        this.state.selectedLocations.push(name);\n                        this.setState({});\n                    }}\n                >\n                    <LTooltip direction=\"bottom\" offset={[0, 20]} opacity={1} className={\"markerTooltip\"}>\n                        {\n                            this.tooltip(name, data)\n                        }\n                    </LTooltip>\n                </CircleMarker>\n            );\n        } else if (this.state.glyphs == \"candles\") {\n            return (\n                <Rectangle\n                    className={type}\n                    key={type + \"_\" + index}\n                    fillColor={color}\n                    bounds={[corner0, corner1]}\n                    opacity={0}\n                    fillOpacity={opacity}\n                    onClick={() => {\n                        this.state.selectedLocations.pop();\n                        this.state.selectedLocations.push(name);\n                        this.setState({});\n                    }}\n                >\n                    <LTooltip direction=\"bottom\" offset={[0, 20]} opacity={1} className={\"markerTooltip\"}>\n                        {\n                            this.tooltip(name, data)\n                        }\n                    </LTooltip>\n                </Rectangle>\n            );\n        } else if (this.state.glyphs == \"mountains\") {\n\n            return (\n                <Polygon\n                    className={type}\n                    key={type + \"_\" + index}\n                    fillColor={color}\n                    opacity={0}\n                    positions={latLngs}\n                    fillOpacity={opacity}\n                    onClick={() => {\n                        this.state.selectedLocations.pop();\n                        this.state.selectedLocations.push(name);\n                        this.setState({});\n                    }}\n                >\n                    <LTooltip direction=\"bottom\" offset={[0, 20]} opacity={1} className={\"markerTooltip\"}>\n                        {\n                            this.tooltip(name, data)\n                        }\n                    </LTooltip>\n                </Polygon>\n            );\n        }\n    }\n    return \"\";\n  };\n\n  momentumTooltip = (name, data) => {\n      let mode = this.state.ppmmode ? \"ppm\" : \"absolute\";\n      let unit = this.state.ppmmode ? \"ppm\" : \"\";\n      let dataMode;\n      switch(this.state.momentum) {\n          case \"last1\":\n              dataMode = \"growthLast1Day\";\n              break;\n          case \"last3\":\n              dataMode = \"growthLast3Days\";\n              break;\n          case \"last7\":\n              dataMode = \"growthLast7Days\";\n              break;\n      }\n      let confirmed = data[mode][dataMode].confirmed;\n      let recovered = data[mode][dataMode].recovered;\n      let deceased = data[mode][dataMode].deceased;\n      let active = data[mode][dataMode].active;\n      let containmentScore = data.containmentScore;\n      if(containmentScore === null) {\n        containmentScore = \"N/A\";\n      }\n      return (\n        <div>\n            <div>\n                <b>{name}</b><br/>\n                <FontAwesomeIcon icon={faUsers}/> {Utils.rounded(Population.ABSOLUTE[name])}\n                &nbsp;&middot;&nbsp;\n                <span className={\"text-danger\"}>\n                    <FontAwesomeIcon icon={faBiohazard}/>&nbsp;\n                    {<span>{(this.state.momentum !== \"none\" && confirmed >= 0 ? \"+\" : \"\") + Utils.rounded(confirmed)} {unit}</span>}\n                </span>\n                &nbsp;&middot;&nbsp;\n                <span className={\"text-success\"}>\n                    <FontAwesomeIcon icon={faHeartbeat}/>&nbsp;\n                    {<span>{(this.state.momentum !== \"none\" && recovered >= 0 ? \"+\" : \"\") + Utils.rounded(recovered)} {unit}</span>}\n                </span>\n                &nbsp;&middot;&nbsp;\n                <span className={\"text-dark\"}>\n                    <FontAwesomeIcon icon={faHeartBroken}/>&nbsp;\n                    {<span>{(this.state.momentum !== \"none\" && deceased >= 0 ? \"+\" : \"\") + Utils.rounded(deceased)} {unit}</span>}\n                </span>\n            </div>\n            <div>\n                <Badge variant={\"danger\"}>\n                <FontAwesomeIcon icon={faProcedures}/>&nbsp;\n                    {<span>{(this.state.momentum !== \"none\" && active >= 0 ? \"+\" : \"\") + Utils.rounded(active)} {unit}</span>}\n                </Badge>\n            </div>\n            <div className=\"stayAtHomeScoreLabel\">\n            {\n              [\n                <span className=\"stayAtHomeAdvice\">{this.stayAtHomeAdvice(data.absolute.current.active)}</span>,\n                <br/>\n              ]\n            }\n            <table>\n              <tbody>\n                <tr>\n                  <td valign={\"top\"}>\n                    <div className={`stayAtHomeScore stayAtHomeScore${containmentScore}`}>\n                      {containmentScore}{containmentScore !== \"N/A\" ? \"/10\" : \"\"}\n                    </div>\n                  </td>\n                  <td>\n                    <div>\n                      <i>Containment Score</i> reflects the spread of COVID19<br />\n                      in the region, based on weighted average growth<br />\n                      of confirmed cases over the past 1, 3 and 7 days.\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td><FontAwesomeIcon icon={faExclamationTriangle}/> <b>Continue to follow the advice of the WHO<br/>and your local administration.</b></td>\n                </tr>\n                {\n                  this.state.ppmmode &&\n                  <tr>\n                    <td></td>\n                    <td><span className=\"text-muted\">ppm: confirmed cases per one million people</span></td>\n                  </tr>\n                }\n              </tbody>\n            </table>\n          </div>\n          <BarChart\n            datasource={this.state.datasource}\n            name={name}\n            logmode={this.state.logmode}\n            dayOffset={this.state.dayOffset}\n          />\n          <br />\n          <div className={\"text-center\"}>\n              Plot shows data scaled <b>{this.state.logmode ? \"logarithmically\" : \"linearly \"}</b>  over time.<br /><i>It is currently insensitive to population size.</i>\n          </div>\n        </div>\n      );\n  };\n\n\n  tooltip = (name, data) => {\n    let mode = this.state.ppmmode ? \"ppm\" : \"absolute\";\n    let unit = this.state.ppmmode ? \"ppm\" : \"\";\n    let containmentScore = data.containmentScore;\n    if(containmentScore === null) {\n      containmentScore = \"N/A\";\n    }\n    try {\n      return (\n        <div>\n          <div>\n              <b>{name}</b><br />\n              <FontAwesomeIcon icon={faUsers}/> {Utils.rounded(Population.ABSOLUTE[name])}\n              &nbsp;&middot;&nbsp;\n              <span className={\"text-danger\"}>\n                <FontAwesomeIcon icon={faBiohazard}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.confirmed)} {unit}</span>}\n              </span>\n              &nbsp;&middot;&nbsp;\n              <span className={\"text-success\"}>\n                <FontAwesomeIcon icon={faHeartbeat}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.recovered)} {unit}</span>}\n              </span>\n              &nbsp;&middot;&nbsp;\n              <span className={\"text-dark\"}>\n                <FontAwesomeIcon icon={faHeartBroken}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.deceased)} {unit}</span>}\n              </span>\n          </div>\n          <div>\n            {\n              data[mode].current.confirmedProjected > data[mode].current.confirmed && this.state.testmode && this.state.testscale > 0 &&\n              [\n                <Badge className={\"text-primary\"}>\n                  <FontAwesomeIcon icon={faBiohazard}/>&nbsp;\n                  &gt;{<span>{Utils.rounded(data[mode].current.confirmedProjected * this.state.testscale)} {unit} projected at {this.state.testscale}x global avg. testing rate</span>}\n                </Badge>,\n                <br />\n              ]\n            }\n            <Badge variant={\"danger\"}>\n                <FontAwesomeIcon icon={faProcedures}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.active)} {unit} active</span>}\n            </Badge>\n            &nbsp;&middot;&nbsp;\n            <Badge variant={\"primary\"}>\n                <FontAwesomeIcon icon={faVial}/>&nbsp;\n                { Testing.RATES[name] && <span>{(Population.ABSOLUTE[name]&&this.state.ppmmode)?Utils.rounded(Testing.RATES[name]*ONE_M/Population.ABSOLUTE[name]) +\" ppm\":Utils.rounded(Testing.RATES[name])} tested</span>}\n                { !Testing.RATES[name] && <span>No testing data</span>}\n            </Badge>\n            <br/>\n          </div>\n          <div className=\"stayAtHomeScoreLabel\">\n            {\n              [\n                <span className=\"stayAtHomeAdvice\">{this.stayAtHomeAdvice(data.absolute.current.active)}</span>,\n                <br/>\n              ]\n            }\n            <table>\n              <tbody>\n                <tr>\n                  <td valign={\"top\"}>\n                    <div className={`stayAtHomeScore stayAtHomeScore${containmentScore}`}>\n                      {containmentScore}{containmentScore !== \"N/A\" ? \"/10\" : \"\"}\n                    </div>\n                  </td>\n                  <td>\n                    <div>\n                      <i>Containment Score</i> reflects the spread of COVID19<br />\n                      in the region, based on weighted average growth<br />\n                      of confirmed cases over the past 1, 3 and 7 days.\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td><FontAwesomeIcon icon={faExclamationTriangle}/> <b>Continue to follow the advice of the WHO<br/>and your local administration.</b></td>\n                </tr>\n                {\n                  this.state.ppmmode &&\n                  <tr>\n                    <td></td>\n                    <td><span className=\"text-muted\">ppm: confirmed cases per one million people</span></td>\n                  </tr>\n                }\n              </tbody>\n            </table>\n          </div>\n          <BarChart\n            datasource={this.state.datasource}\n            name={name}\n            logmode={this.state.logmode}\n            dayOffset={this.state.dayOffset}\n          />\n          <br />\n          <div className={\"text-center\"}>\n              Plot shows data scaled <b>{this.state.logmode ? \"logarithmically\" : \"linearly \"}</b>  over time.<br /><i>It is currently insensitive to population size.</i>\n          </div>\n        </div>\n      )\n    } catch(e) {\n      console.log(e);\n      return \"Could not load tooltip data.\";\n    }\n  };\n\n  stayAtHomeAdvice = (active) => {\n    if(active > 150) {\n      return \"You save lives by staying at home today!\"\n    }\n    if (active > 0) {\n      return \"Avoid crowds! Keep social distance!\";\n    }\n    return \"No active cases detected in this region.\";\n  };\n\n      /*\n\n        <Marker coordinates={coordinates} key={type + \"_\" + rowId}>\n          // pill\n          <rect\n              fill={color + transparency}\n              style={this.state.chart === \"pill\" ? {display: \"block\"} : {display: \"none\"}}\n              x={isNaN(size) ? 0 : -size * this.state.factor / 2}\n              y={-this.state.width / 2 * 3}\n              height={(this.state.width < 0) ? 0 : this.state.width * 3}\n              width={isNaN(size) ? 0 : (size * this.state.factor > 0) ? size * this.state.factor : 0}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          // bar\n          <rect\n              fill={color + transparency}\n              style={this.state.chart === \"bar\" ? {display: \"block\"} : {display: \"none\"}}\n              x={this.state.width * 3 * 2 - this.state.width * 3 * 1.5}\n              y={isNaN(size) ? 0 : -size * this.state.factor}\n              height={isNaN(size) ? 0 : (size * this.state.factor < 0) ? 0 : size * this.state.factor}\n              width={(this.state.width < 0) ? 0 : this.state.width * 3}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          // bubble\n          <circle\n              fill={color + transparency}\n              style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n              r={size && size > 0 ? Math.sqrt(size) * this.state.factor : 0}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          <title>{text}</title>\n        </Marker>\n      */\n\n  scale = (value, population) => {\n    value = this.scaleIfPillOrBar(value);\n    if(!this.state.logmode && this.state.ppmmode) {\n        value /= 5;\n    }\n    value = this.scaleLog(value);\n    return value;\n  };\n\n  scaleIfPillOrBar = (value) => {\n    if(this.state.chart===\"pill\" || this.state.chart===\"bar\") {\n      return value * 10;\n    }\n    return value;\n  };\n\n  scaleLog = (value) => {\n    if(!this.state.logmode) {\n      return value;\n    }\n    if(value > 0) {\n        if(!this.state.ppmmode) {\n            value = Math.log(value * this.state.datasource.absoluteMaxValue) / Math.log(this.state.datasource.absoluteMaxValue) / 20;\n        } else {\n            value = Math.log(value * this.state.datasource.ppmMaxValue) / Math.log(this.state.datasource.ppmMaxValue) / 20;\n        }\n        return value;\n    }\n    return 0;\n  };\n\n  scaleLogAndPpm = (value) => {\n    if(this.state.logmode && this.state.ppmmode) {\n      return value / 3;\n    }\n    return value;\n  };\n\n  count = (string, char) => {\n    return (string.length - string.replace(new RegExp(char,\"g\"), '').length) / char.length;\n  };\n}\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDotCircle} from '@fortawesome/free-regular-svg-icons';\nimport { faBiohazard, faHeartBroken, faHeartbeat} from '@fortawesome/free-solid-svg-icons';\n\nimport Utils from \"./Utils\";\n\nfunction App() {\n  const [totalConfirmed, setTotalConfirmed] = useState(0);\n  const [totalRecovered, setTotalRecovered] = useState(0);\n  const [totalDeceased, setTotalDeceased] = useState(0);\n  const [totalConfirmedProjected, setTotalConfirmedProjected] = useState(0);\n\n  return (\n    [\n      <Navbar bg=\"light\" fixed=\"top\" className={\"p-0 pl-2\"} expand={\"xs\"}>\n        <Navbar.Brand>\n            <span className=\"small\">C<FontAwesomeIcon icon={faDotCircle} />VID19 </span>\n            <span className={\"mapio\"}><b>MAP</b><span className=\"text-secondary\">.IO</span></span>\n        </Navbar.Brand>\n          <span>\n            {\n              totalConfirmedProjected > totalConfirmed &&\n              <span className={\"small text-primary mr-2\"}>\n                <FontAwesomeIcon icon={faBiohazard} className={\"mr-1\"}/>\n                {Utils.rounded(totalConfirmedProjected)}\n              </span>\n            }\n            {\n              totalConfirmedProjected <= totalConfirmed &&\n              <span className={\"small text-danger mr-2\"}>\n                <FontAwesomeIcon icon={faBiohazard} className={\"mr-1\"}/>\n                {Utils.rounded(totalConfirmed)}\n              </span>\n            }\n            <span className={\"small text-success mr-2\"}>\n              <FontAwesomeIcon icon={faHeartbeat} className={\"mr-1\"} />\n              {Utils.rounded(totalRecovered)}\n            </span>\n            <span className={\"small mr-2\"}>\n              <FontAwesomeIcon icon={faHeartBroken} className={\"mr-1\"} />\n              {Utils.rounded(totalDeceased)}\n            </span>\n          </span>\n      </Navbar>,\n      <Container fluid className={\"w-100 h-100 p-0\"}>\n        <Row noGutters={\"true\"} className={\"h-100\"}>\n          <Col className={\"h-100\"}>\n            <MapChart\n                key={\"mapChart\"}\n                style={{marginTop: \"50px\"}}\n                setTotalConfirmed={setTotalConfirmed}\n                setTotalRecovered={setTotalRecovered}\n                setTotalDeceased={setTotalDeceased}\n                setTotalConfirmedProjected={setTotalConfirmedProjected}\n                totalConfirmedProjected={totalConfirmedProjected}\n                totalConfirmed={totalConfirmed}\n                totalDeceased={totalDeceased}\n                totalRecovered={totalRecovered}\n            />\n          </Col>\n        </Row>\n      </Container>\n    ]\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react';\n\nfunction RApp() {\n\n  return (\n      <div>\n        <h1>Shame on you!</h1>\n        You have included <a href=\"https://covid19map.io\">covid19map.io</a> in your website, but disregarded the license terms.<br />\n        Open-source is a beautiful thing, because it helps to spread ideas and source code for free. The one little thing you can do<br />\n        is <i>pay respect</i> to the work hours the orginal authors put into the software that you were granted to take for free.<br />\n        This is also a condition of the <a href=\"https://github.com/daniel-karl/covid19-map/blob/master/LICENSE.txt\">license that has\n        been given to you</a>.<br /><br />\n        To get removed from the blacklist please\n        <ul>\n          <li>follow our license terms by adding a link to <a href=\"https://covid19map.io\">covid19map.io</a> in your website</li>\n          <li>and then <a href=\"https://github.com/daniel-karl/covid19-map/issues\">open a ticket</a> to let us know.</li>\n        </ul>\n      </div>\n  );\n}\n\nexport default RApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport App from './App';\nimport RApp from './RApp';\n\nif(document.referrer.indexOf(\"worldhealthstats.online\") !== -1) {\n    ReactDOM.render(<RApp />, document.getElementById('root'));\n}\nelse if (document.referrer.indexOf(\"globe.pthapp.co.in\") !== -1) {\n    ReactDOM.render(<RApp />, document.getElementById('root'));\n}\nelse {\n    ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n\n\n\n"],"sourceRoot":""}